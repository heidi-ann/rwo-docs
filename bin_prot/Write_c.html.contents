<br/><br/><h2 id="2_TITLE">Generic functions for easy creation of wrappers</h2><br/> <br/>
	  
 
      <pre><span><span class="keyword">val</span> unsafe_get_init : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> -&gt;
pos:<a href="Common.html#TYPEpos">Common.pos</a> -&gt;
<a href="Unsafe_common.html#TYPEsptr">Unsafe_common.sptr</a> * <a href="Unsafe_common.html#TYPEsptr">Unsafe_common.sptr</a> * <a href="Unsafe_common.html#TYPEeptr">Unsafe_common.eptr</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make : <code class="type">'a <a href="Unsafe_write_c.html#TYPEwriter">Unsafe_write_c.writer</a> -&gt; 'a <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make1 : <code class="type">('a, 'b) <a href="Unsafe_write_c.html#TYPEwriter1">Unsafe_write_c.writer1</a> -&gt; ('a, 'b) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make2 : <code class="type">('a, 'b, 'c) <a href="Unsafe_write_c.html#TYPEwriter2">Unsafe_write_c.writer2</a> -&gt; ('a, 'b, 'c) <a href="Write_ml.html#TYPEwriter2">Write_ml.writer2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make3 : <code class="type">('a, 'b, 'c, 'd) <a href="Unsafe_write_c.html#TYPEwriter3">Unsafe_write_c.writer3</a> -&gt; ('a, 'b, 'c, 'd) <a href="Write_ml.html#TYPEwriter3">Write_ml.writer3</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> unmake : <code class="type">'a <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a> -&gt;
<a href="Common.html#TYPEbuf">Common.buf</a> -&gt; start:<a href="Unsafe_common.html#TYPEsptr">Unsafe_common.sptr</a> -&gt; 'a <a href="Unsafe_write_c.html#TYPEwriter">Unsafe_write_c.writer</a></code></span></pre>
      
    
<br/><br/><h2 id="2_TITLE">Unsafe C-style writers for basic types wrapped as ML-style writers</h2><br/> <br/>
	  
 
      <pre><span><span class="keyword">val</span> bin_write_unit : <code class="type">unit <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_bool : <code class="type">bool <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_string : <code class="type">string <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_char : <code class="type">char <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_int : <code class="type">int <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_nat0 : <code class="type"><a href="Nat0.html#TYPEt">Nat0.t</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float : <code class="type">float <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_int32 : <code class="type">int32 <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_int64 : <code class="type">int64 <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_nativeint : <code class="type">nativeint <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_ref : <code class="type">('a, 'a <a href="../stdlib/Pervasives.html#TYPEref">ref</a>) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_lazy : <code class="type">('a, 'a lazy_t) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_option : <code class="type">('a, 'a option) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_pair : <code class="type">('a, 'b, 'a * 'b) <a href="Write_ml.html#TYPEwriter2">Write_ml.writer2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_triple : <code class="type">('a, 'b, 'c, 'a * 'b * 'c) <a href="Write_ml.html#TYPEwriter3">Write_ml.writer3</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_list : <code class="type">('a, 'a list) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_array : <code class="type">('a, 'a array) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_hashtbl : <code class="type">('a, 'b, ('a, 'b) <a href="../stdlib/Hashtbl.html#TYPEt">Hashtbl.t</a>) <a href="Write_ml.html#TYPEwriter2">Write_ml.writer2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float32_vec : <code class="type"><a href="Common.html#TYPEvec32">Common.vec32</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float64_vec : <code class="type"><a href="Common.html#TYPEvec64">Common.vec64</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_vec : <code class="type"><a href="Common.html#TYPEvec">Common.vec</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float32_mat : <code class="type"><a href="Common.html#TYPEmat32">Common.mat32</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float64_mat : <code class="type"><a href="Common.html#TYPEmat64">Common.mat64</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_mat : <code class="type"><a href="Common.html#TYPEmat">Common.mat</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_bigstring : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_float_array : <code class="type">float array <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_variant_tag : <code class="type">[&gt;  ] <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_array_no_length : <code class="type">('a, 'a array) <a href="Write_ml.html#TYPEwriter1">Write_ml.writer1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_int_64bit : <code class="type">int <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_int64_bits : <code class="type">int64 <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_network16_int : <code class="type">int <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_network32_int : <code class="type">int <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_network32_int32 : <code class="type">int32 <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_network64_int : <code class="type">int <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_network64_int64 : <code class="type">int64 <a href="Write_ml.html#TYPEwriter">Write_ml.writer</a></code></span></pre>
      
    
