<br/><br/><h2 id="2_TITLE">Generic functions for easy creation of wrappers</h2><br/> <br/>
	  
 
      <pre><span><span class="keyword">val</span> make : <code class="type">'a <a href="Unsafe_read_c.html#TYPEreader">Unsafe_read_c.reader</a> -&gt; 'a <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make1 : <code class="type">('a, 'b) <a href="Unsafe_read_c.html#TYPEreader1">Unsafe_read_c.reader1</a> -&gt; ('a, 'b) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make2 : <code class="type">('a, 'b, 'c) <a href="Unsafe_read_c.html#TYPEreader2">Unsafe_read_c.reader2</a> -&gt; ('a, 'b, 'c) <a href="Read_ml.html#TYPEreader2">Read_ml.reader2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make3 : <code class="type">('a, 'b, 'c, 'd) <a href="Unsafe_read_c.html#TYPEreader3">Unsafe_read_c.reader3</a> -&gt; ('a, 'b, 'c, 'd) <a href="Read_ml.html#TYPEreader3">Read_ml.reader3</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> unmake : <code class="type">'b <a href="Read_ml.html#TYPEreader">Read_ml.reader</a> -&gt; <a href="Common.html#TYPEbuf">Common.buf</a> -&gt; 'b <a href="Unsafe_read_c.html#TYPEreader">Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> handle_error : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> -&gt; <a href="Unsafe_common.html#TYPEsptr_ptr">Unsafe_common.sptr_ptr</a> -&gt; <a href="Common.ReadError.html#TYPEt">Common.ReadError.t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> handle_exc : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> -&gt; <a href="Unsafe_common.html#TYPEsptr_ptr">Unsafe_common.sptr_ptr</a> -&gt; exn -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> at_end : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> -&gt; <a href="Unsafe_common.html#TYPEsptr_ptr">Unsafe_common.sptr_ptr</a> -&gt; <a href="Common.html#TYPEpos_ref">Common.pos_ref</a> -&gt; 'a -&gt; 'a</code></span></pre>
      
    
<br/><br/><h2 id="2_TITLE">Unsafe C-style readers for basic types wrapped as ML-style readers</h2><br/> <br/>
	  
 
      <pre><span><span class="keyword">val</span> bin_read_unit : <code class="type">unit <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_bool : <code class="type">bool <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_string : <code class="type">string <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_char : <code class="type">char <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_int : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_nat0 : <code class="type"><a href="Nat0.html#TYPEt">Nat0.t</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float : <code class="type">float <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_int32 : <code class="type">int32 <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_int64 : <code class="type">int64 <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_nativeint : <code class="type">nativeint <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_ref : <code class="type">('a, 'a <a href="../stdlib/Pervasives.html#TYPEref">ref</a>) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_lazy : <code class="type">('a, 'a lazy_t) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_option : <code class="type">('a, 'a option) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_pair : <code class="type">('a, 'b, 'a * 'b) <a href="Read_ml.html#TYPEreader2">Read_ml.reader2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_triple : <code class="type">('a, 'b, 'c, 'a * 'b * 'c) <a href="Read_ml.html#TYPEreader3">Read_ml.reader3</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_list : <code class="type">('a, 'a list) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_array : <code class="type">('a, 'a array) <a href="Read_ml.html#TYPEreader1">Read_ml.reader1</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_hashtbl : <code class="type">('a, 'b, ('a, 'b) <a href="../stdlib/Hashtbl.html#TYPEt">Hashtbl.t</a>) <a href="Read_ml.html#TYPEreader2">Read_ml.reader2</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float32_vec : <code class="type"><a href="Common.html#TYPEvec32">Common.vec32</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float64_vec : <code class="type"><a href="Common.html#TYPEvec64">Common.vec64</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_vec : <code class="type"><a href="Common.html#TYPEvec">Common.vec</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float32_mat : <code class="type"><a href="Common.html#TYPEmat32">Common.mat32</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float64_mat : <code class="type"><a href="Common.html#TYPEmat64">Common.mat64</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_mat : <code class="type"><a href="Common.html#TYPEmat">Common.mat</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_bigstring : <code class="type"><a href="Common.html#TYPEbuf">Common.buf</a> <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_float_array : <code class="type">float array <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_variant_int : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_variant_tag : <code class="type">[&gt;  ] <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_int_64bit : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_int64_bits : <code class="type">int64 <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_network16_int : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_network32_int : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_network32_int32 : <code class="type">int32 <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_network64_int : <code class="type">int <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_network64_int64 : <code class="type">int64 <a href="Read_ml.html#TYPEreader">Read_ml.reader</a></code></span></pre>
      
    
