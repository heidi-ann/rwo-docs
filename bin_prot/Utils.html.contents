 
      <pre><span><span class="keyword">val</span> bin_dump : <code class="type">?header:bool -&gt; 'a <a href="Type_class.html#TYPEwriter">Type_class.writer</a> -&gt; 'a -&gt; <a href="Common.html#TYPEbuf">Common.buf</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_stream : <code class="type">?max_size:int -&gt;
read:(<a href="Common.html#TYPEbuf">Common.buf</a> -&gt; pos:int -&gt; len:int -&gt; unit) -&gt; 'a <a href="Type_class.html#TYPEreader">Type_class.reader</a> -&gt; 'a</code></span></pre>
      
    
<br/>Conversion of binable types<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_binable_spec.html">Make_binable_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_binable_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_binable.html">Make_binable</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Bin_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_binable_spec.html">Make_binable_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S.html">Binable.S</a></code> with type t = Bin_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_binable1_spec.html">Make_binable1_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_binable1_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable1_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_binable1.html">Make_binable1</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Bin_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_binable1_spec.html">Make_binable1_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S1.html">Binable.S1</a></code> with type t = 'a Bin_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable1.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_binable2_spec.html">Make_binable2_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_binable2_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable2_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_binable2.html">Make_binable2</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Bin_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_binable2_spec.html">Make_binable2_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S2.html">Binable.S2</a></code> with type t = ('a, 'b) Bin_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_binable2.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<br/>Conversion of iterable types<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_iterable_binable_spec.html">Make_iterable_binable_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_iterable_binable_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_iterable_binable.html">Make_iterable_binable</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Iterable_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_iterable_binable_spec.html">Make_iterable_binable_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S.html">Binable.S</a></code> with type t = Iterable_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_iterable_binable1_spec.html">Make_iterable_binable1_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_iterable_binable1_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable1_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_iterable_binable1.html">Make_iterable_binable1</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Iterable_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_iterable_binable1_spec.html">Make_iterable_binable1_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S1.html">Binable.S1</a></code> with type t = 'a Iterable_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable1.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Utils.Make_iterable_binable2_spec.html">Make_iterable_binable2_spec</a> = <code class="type"><code class="code">sig</code> <a href="Utils.Make_iterable_binable2_spec.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable2_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Utils.Make_iterable_binable2.html">Make_iterable_binable2</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Iterable_spec</code><code class="code"> : </code><code class="type"><a href="Utils.Make_iterable_binable2_spec.html">Make_iterable_binable2_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Binable.S2.html">Binable.S2</a></code> with type t = ('a, 'b) Iterable_spec.t</div></pre>
	<div class="content" style="display:none">
	<div file="Utils.Make_iterable_binable2.html.contents" class="content_to_load"> </div>
	</div>
  </div>
