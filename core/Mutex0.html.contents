 
      <pre><span><span class="keyword">val</span> __pa_ounit_275876e34cf609db118f3d84b799a790 : <code class="type">string</code></span></pre>
      
    

FIX ME
<br/><code class="code">create</code> like TODO reference : Mutex.create, but creates an error-checking mutex.
    Locking a mutex twice from the same thread, unlocking an unlocked mutex,
    or unlocking a mutex not held by the thread will result in a <code class="code">Sys_error</code>
    exception.<br/>
	  
 
      <pre><span><span class="keyword">val</span> create : <code class="type">unit -&gt; Mutex.t</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">unit -&gt; Mutex.t</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> phys_equal : <code class="type">'a -&gt; 'a -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> equal : <code class="type">t -&gt; t -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> critical_section : <code class="type">t -&gt; f:(unit -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> synchronize : <code class="type">('a -&gt; 'b) -&gt; 'a -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> update_signal : <code class="type">t -&gt; Condition.t -&gt; f:(unit -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> update_broadcast : <code class="type">t -&gt; Condition.t -&gt; f:(unit -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> try_lock : <code class="type">t -&gt; [&gt; `Acquired | `Already_held_by_me_or_other ]</code></span></pre>
      
    

