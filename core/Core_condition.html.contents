<pre><span id="TYPEt"><span class="keyword">type</span> t </span>= <code class="type">Condition.t</code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">unit -&gt; <a href="Core_condition.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> equal : <code class="type"><a href="Core_condition.html#TYPEt">t</a> -&gt; <a href="Core_condition.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> wait : <code class="type"><a href="Core_condition.html#TYPEt">t</a> -&gt; Mutex.t -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> timedwait : <code class="type"><a href="Core_condition.html#TYPEt">t</a> -&gt; Mutex.t -&gt; <a href="Time.html#TYPEt">Time.t</a> -&gt; bool</code></span></pre>
      <div class="info"><code class="code">timedwait cond mtx timeout</code> waits on condition variable <code class="code">cond</code>
    with mutex <code class="code">mtx</code> until either the condition is signalled, or until
    <code class="code">timeout</code> expires.  Note that <code class="code">timeout</code> is an absolute Unix-time to
    prevent time-related race conditions.<br/> <b>Returns</b> <code class="code">false</code> iff the timer expired, but this does not mean that
    the condition is not true due to an unavoidable race condition in
    the system call.<br/>    See <code class="code">man pthread_cond_timedwait</code> for details.</div>
    
 
      <pre><span><span class="keyword">val</span> signal : <code class="type"><a href="Core_condition.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> broadcast : <code class="type"><a href="Core_condition.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      
    
