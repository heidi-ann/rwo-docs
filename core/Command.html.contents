<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Command.Spec.html">Spec</a> : <code class="code">sig</code> <a href="Command.Spec.html">..</a> <code class="code">end</code></pre><div class="info">composable command-line specifications</div>
	<div class="content" style="display:none">
	<div file="Command.Spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEt"><span class="keyword">type</span> t </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> basic : <code class="type">summary:string -&gt;
?readme:(unit -&gt; string) -&gt; ('main, unit -&gt; unit) <a href="Command.Spec.html#TYPEt">Spec.t</a> -&gt; 'main -&gt; <a href="Command.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">basic ~summary ?readme spec main</code> is a basic command that executes a function <code class="code">main</code>
    which is passed parameters parsed from the command line according to <code class="code">spec</code>. <code class="code">summary</code>
    is to contain a short one-line description of its behavior.  <code class="code">readme</code> is to contain
    any longer description of its behavior that will go on that commands' help screen.</div>
    
 
      <pre><span><span class="keyword">val</span> group : <code class="type">summary:string -&gt; ?readme:(unit -&gt; string) -&gt; (string * <a href="Command.html#TYPEt">t</a>) list -&gt; <a href="Command.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">group ~summary subcommand_alist</code> is a compound command with named
    subcommands, as found in <code class="code">subcommand_alist</code>.  <code class="code">summary</code> is to contain
    a short one-line description of the command group.  <code class="code">readme</code> is to
    contain any longer description of its behavior that will go on that
    command's help screen.<br/>    NOTE: subcommand names containing underscores will be rejected.  Use dashes instead.</div>
    
 
      <pre><span><span class="keyword">val</span> run : <code class="type">?version:string -&gt;
?build_info:string -&gt;
?argv:string list -&gt; ?extend:(string list -&gt; string list) -&gt; <a href="Command.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      <div class="info">Run a command against <code class="code">Sys.argv</code>, or <code class="code">argv</code> if it is specified.<br/>    <code class="code">extend</code> can be used to add extra command line arguments to basic subcommands of the
    command.  <code class="code">extend</code> will be passed the (fully expanded) path to a command, and its
    output will be appended to the list of arguments being processed.  For example,
    suppose a program like this is compiled into <code class="code">exe</code>:<br/>      <pre class="codepre"><code class="code">
        let bar = Command.basic ...
        let foo = Command.group ~summary:... [&quot;bar&quot;, bar]
        let main = Command.group ~summary:... [&quot;foo&quot;, foo]
        Command.run ~extend:(fun _ -&gt; [&quot;-baz&quot;]) main
      </code></pre><br/>    Then if a user ran <code class="code">exe f b</code>, <code class="code">extend</code> would be passed <code class="code">[&quot;foo&quot;; &quot;bar&quot;]</code> and <code class="code">&quot;-baz&quot;</code>
    would be appended to the command line for processing by <code class="code">bar</code>.  This can be used to
    add a default flags section to a user config file.</div>
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Command.Deprecated.html">Deprecated</a> : <code class="code">sig</code> <a href="Command.Deprecated.html">..</a> <code class="code">end</code></pre><div class="info"><code class="code">Deprecated</code> should be used only by <code class="code">Core_extended.Deprecated_command</code>.  At some point
    it will go away.</div>
	<div class="content" style="display:none">
	<div file="Command.Deprecated.html.contents" class="content_to_load"> </div>
	</div>
  </div>
