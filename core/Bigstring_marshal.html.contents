<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> module type of <a href="../core_kernel/Std.Bigstring_marshal.html">Core_kernel.Std.Bigstring_marshal</a></pre>
	<div class="content">
	<div file="../core_kernel/Std.Bigstring_marshal.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> marshal_to_fd : <code class="type">?buf:<a href="../core_kernel/Std.Bigstring.html#TYPEt">Core_kernel.Std.Bigstring.t</a> -&gt;
?flags:<a href="../stdlib/Marshal.html#TYPEextern_flags">Marshal.extern_flags</a> list -&gt; <a href="../otherlibs/Unix.html#TYPEfile_descr">Unix.file_descr</a> -&gt; 'a -&gt; unit</code></span></pre>
      <div class="info"><code class="code">marshal_to_fd ?buf fd v</code> marshals data <code class="code">v</code> to file descriptor <code class="code">fd</code>
    using marshalling buffer <code class="code">buf</code>, and marshalling flags <code class="code">flags</code>.
    Raises input errors as in TODO reference : Bigstring.really_write.<br/> <div class="parameters"><div class="param_info"><code class="code">flags</code> : default = []</div><div class="param_info"><code class="code">buf</code> : default = determined dynamically</div></div><b>Raises</b> <code>Failure</code> if <code class="code">buf</code> cannot hold enough data for marshalling.<br/> <br/></div>
    
 
      <pre><span><span class="keyword">val</span> marshal_to_sock_no_sigpipe : <code class="type">(?buf:<a href="../core_kernel/Std.Bigstring.html#TYPEt">Core_kernel.Std.Bigstring.t</a> -&gt;
 ?flags:<a href="../stdlib/Marshal.html#TYPEextern_flags">Marshal.extern_flags</a> list -&gt; <a href="../otherlibs/Unix.html#TYPEfile_descr">Unix.file_descr</a> -&gt; 'a -&gt; unit)
<a href="../core_kernel/Std.Or_error.html#TYPEt">Core_kernel.Std.Or_error.t</a></code></span></pre>
      <div class="info"><code class="code">marshal_to_sock_no_sigpipe ?buf sock v</code> same as TODO reference : marshal_to_fd, but
    writes to sockets only and uses TODO reference : Bigstring.really_send_no_sigpipe
    to avoid <code class="code">SIGPIPE</code> on sockets.</div>
    
 
      <pre><span><span class="keyword">val</span> unmarshal_from_sock : <code class="type">?buf:<a href="../core_kernel/Std.Bigstring.html#TYPEt">Core_kernel.Std.Bigstring.t</a> -&gt; <a href="../otherlibs/Unix.html#TYPEfile_descr">Unix.file_descr</a> -&gt; 'a</code></span></pre>
      <div class="info"><code class="code">unmarshal_from_sock ?buf sock</code> unmarshals data from socket <code class="code">sock</code>
    using unmarshalling buffer <code class="code">buf</code>.  Raises input errors as in
    TODO reference : Bigstring.really_recv.<br/> <div class="parameters"><div class="param_info"><code class="code">buf</code> : default = determined dynamically</div></div><b>Raises</b> <code>Failure</code> if <code class="code">buf</code> cannot hold enough data for unmarshalling.<br/> <br/></div>
    
