<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'a </code>t </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">(unit -&gt; 'a <a href="Deferred.html#TYPEt">Deferred.t</a>) -&gt; 'a <a href="Lazy_deferred.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">create f</code> creates a new lazy deferred that will call <code class="code">f</code> when it is forced.</div>
    
 
      <pre><span><span class="keyword">val</span> force : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; ('a, exn) <a href="../core/Std.Result.html#TYPEt">Core.Std.Result.t</a> <a href="Deferred.html#TYPEt">Deferred.t</a></code></span></pre>
      <div class="info"><code class="code">force t</code> forces evaluation of <code class="code">t</code> and returns a deferred that becomes determined
    when the deferred computation becomes determined or raises.</div>
    
 
      <pre><span><span class="keyword">val</span> force_exn : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; 'a <a href="Deferred.html#TYPEt">Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> wait : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; ('a, exn) <a href="../core/Std.Result.html#TYPEt">Core.Std.Result.t</a> <a href="Deferred.html#TYPEt">Deferred.t</a></code></span></pre>
      <div class="info"><code class="code">wait t</code> waits for <code class="code">t</code> to be forced.  If no one ever calls <code class="code">force t</code>, <code class="code">wait</code> will wait
    forever.</div>
    
 
      <pre><span><span class="keyword">val</span> wait_exn : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; 'a <a href="Deferred.html#TYPEt">Deferred.t</a></code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="../core/Std.Monad.html">Core.Std.Monad</a></code> with type t = 'a <a href="Lazy_deferred.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="../core/Std.Monad.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> bind' : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; ('a -&gt; 'b <a href="Deferred.html#TYPEt">Deferred.t</a>) -&gt; 'b <a href="Lazy_deferred.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">bind'</code> differs from <code class="code">bind</code> in that the supplied function produces an <code class="code">'a Deferred.t</code>
    rather than an <code class="code">'a t</code>.</div>
    
 
      <pre><span><span class="keyword">val</span> follow : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; ('a -&gt; 'b <a href="Deferred.html#TYPEt">Deferred.t</a>) -&gt; 'b <a href="Lazy_deferred.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">follow t f</code> returns a new lazy deferred almost like <code class="code">bind'</code> with the notable
    difference that its computation will start as soon as the deferred it is following
    becomes <code class="code">determined</code>.  Since the resulting deferred depends on the <code class="code">'a</code> value computed
    by <code class="code">t</code> forcing the resulting of <code class="code">follow</code> will force the compuation of <code class="code">t</code>.</div>
    
<br/>Read-only operations.<br/>
	  
 
      <pre><span><span class="keyword">val</span> peek : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; ('a, exn) <a href="../core/Std.Result.html#TYPEt">Core.Std.Result.t</a> option</code></span></pre>
      <div class="info"><code class="code">peek t = Deferred.peek (wait t)</code> </div>
    
 
      <pre><span><span class="keyword">val</span> peek_exn : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_determined : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_forced : <code class="type">'a <a href="Lazy_deferred.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
