<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> module type of <a href="../core/Std.Command.html">Core.Std.Command</a> with type t = <a href="../core/Std.Command.html#TYPEt">Core.Std.Command.t</a> with module Spec = <a href="../core/Std.Command.Spec.html">Core.Std.Command.Spec</a></pre>
	<div class="content">
	<div file="../core/Std.Command.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> async_basic : <code class="type">summary:string -&gt;
?readme:(unit -&gt; string) -&gt;
('a, unit -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a>) Spec.t -&gt; 'a -&gt; t</code></span></pre>
      <div class="info"><code class="code">async_basic</code> is exactly the same as <code class="code">Core.Command.basic</code>, except that the function it
    wraps returns <code class="code">unit Deferred.t</code>, instead of <code class="code">unit</code>.  <code class="code">async_basic</code> will also start the
    Async scheduler before the wrapped function is run, and will stop the scheduler when
    the wrapped function returns.</div>
    
