<pre><code><span id="TYPEt"><span class="keyword">type</span> <code class="type">'name </code>t </span>= </code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Unauthorized"><span class="constructor">Unauthorized</span></span> <span class="keyword">of</span> <code class="type">string</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Duplicate"><span class="constructor">Duplicate</span></span> <span class="keyword">of</span> <code class="type">'name</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Wrong_mode"><span class="constructor">Wrong_mode</span></span> <span class="keyword">of</span> <code class="type">'name</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Too_many_clients"><span class="constructor">Too_many_clients</span></span> <span class="keyword">of</span> <code class="type">string</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Almost_full"><span class="constructor">Almost_full</span></span> <span class="keyword">of</span> <code class="type">int</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Connect"><span class="constructor">Connect</span></span> <span class="keyword">of</span> <code class="type">'name</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Disconnect"><span class="constructor">Disconnect</span></span> <span class="keyword">of</span> <code class="type">'name * <a href="../core/Std.Sexp.html#TYPEt">Core.Std.Sexp.t</a></code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Parse_error"><span class="constructor">Parse_error</span></span> <span class="keyword">of</span> <code class="type">'name * string</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Protocol_error"><span class="constructor">Protocol_error</span></span> <span class="keyword">of</span> <code class="type">string</code></code></td>
	   </tr></table>
      
    

 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type">('a -&gt; int) -&gt; 'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type">(<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr">Core.Std.Bin_prot.Unsafe_common.sptr</a> -&gt;
 <a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt; 'a -&gt; <a href="../bin_prot/Unsafe_common.html#TYPEsptr">Bin_prot.Unsafe_common.sptr</a>) -&gt;
<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr">Core.Std.Bin_prot.Unsafe_common.sptr</a> -&gt;
<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt; 'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> -&gt; <a href="../bin_prot/Unsafe_common.html#TYPEsptr">Bin_prot.Unsafe_common.sptr</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type">(<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr">Core.Std.Bin_prot.Unsafe_common.sptr</a> -&gt;
 <a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt;
 'a -&gt; <a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr">Core.Std.Bin_prot.Unsafe_common.sptr</a>) -&gt;
<a href="../core/Std.Bin_prot.Common.html#TYPEbuf">Core.Std.Bin_prot.Common.buf</a> -&gt;
pos:<a href="../core/Std.Bin_prot.Common.html#TYPEpos">Core.Std.Bin_prot.Common.pos</a> -&gt; 'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> -&gt; <a href="../core/Std.Bin_prot.Common.html#TYPEpos">Core.Std.Bin_prot.Common.pos</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type">'a <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a> -&gt;
'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">'a -&gt; 'b -&gt; 'c -&gt; 'd -&gt; 'e</code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type">(<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr_ptr">Core.Std.Bin_prot.Unsafe_common.sptr_ptr</a> -&gt;
 <a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt; 'a) -&gt;
<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr_ptr">Core.Std.Bin_prot.Unsafe_common.sptr_ptr</a> -&gt;
<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt; 'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type">(<a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEsptr_ptr">Core.Std.Bin_prot.Unsafe_common.sptr_ptr</a> -&gt;
 <a href="../core/Std.Bin_prot.Unsafe_common.html#TYPEeptr">Core.Std.Bin_prot.Unsafe_common.eptr</a> -&gt; 'name) -&gt;
<a href="../core/Std.Bin_prot.Common.html#TYPEbuf">Core.Std.Bin_prot.Common.buf</a> -&gt;
pos_ref:<a href="../core/Std.Bin_prot.Common.html#TYPEpos">Core.Std.Bin_prot.Common.pos</a> <a href="../stdlib/Pervasives.html#TYPEref">ref</a> -&gt; 'name <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type">'a <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a> -&gt;
'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type">'a <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a> -&gt; 'a <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> __t_of_sexp__ : <code class="type">'name. (<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'name) -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'name <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type">'name. (<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'name) -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'name <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a></code></span></pre>
      
    

 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type">'name. ('name -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt; 'name <a href="Versioned_typed_tcp.Server_msg.Control.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    

