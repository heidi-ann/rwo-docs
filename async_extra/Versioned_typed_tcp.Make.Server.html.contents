<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Versioned_typed_tcp.Make.Server.Connections.html">Connections</a> : <code class="code">sig</code> <a href="Versioned_typed_tcp.Make.Server.Connections.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Versioned_typed_tcp.Make.Server.Connections.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><code><span id="TYPEt"><span class="keyword">type</span> t </span>= {</code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.tail">tail</span> :<code class="type">(Remote_name.t, Recv.t) <a href="Versioned_typed_tcp.Server_msg.html#TYPEt">Server_msg.t</a> <a href="Import.Tail.html#TYPEt">Import.Tail.t</a></code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.logfun">logfun</span> :<code class="type"><a href="Versioned_typed_tcp.Make.html#TYPElogfun">logfun</a> option</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.connections">connections</span> :<code class="type"><a href="Versioned_typed_tcp.Make.Server.Connections.html#TYPEt">Connections.t</a></code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTt.am_listening">am_listening</span> :<code class="type">bool</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.socket">socket</span> :<code class="type">([ `Bound ], <a href="Import.Socket.Address.Inet.html#TYPEt">Import.Socket.Address.Inet.t</a>) <a href="Import.Socket.html#TYPEt">Import.Socket.t</a></code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.warn_free_connections_pct">warn_free_connections_pct</span> :<code class="type">float</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTt.free_connections">free_connections</span> :<code class="type">int</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTt.when_free">when_free</span> :<code class="type">unit <a href="Import.Ivar.html#TYPEt">Import.Ivar.t</a> option</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.max_clients">max_clients</span> :<code class="type">int</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.is_client_ip_authorized">is_client_ip_authorized</span> :<code class="type">string -&gt; bool</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.my_name">my_name</span> :<code class="type">My_name.t</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.enforce_unique_remote_name">enforce_unique_remote_name</span> :<code class="type">bool</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTt.now">now</span> :<code class="type">unit -&gt; <a href="../core/Std.Time.html#TYPEt">Core.Std.Time.t</a></code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTt.num_accepts">num_accepts</span> :<code class="type"><a href="../core/Std.Int63.html#TYPEt">Core.Std.Int63.t</a></code>;</code></td>
	  </tr></table>}
      
    
 
      <pre><span><span class="keyword">val</span> invariant : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> flushed : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt;
cutoff:unit <a href="../async_core/Deferred.html#TYPEt">Async_core.Deferred.t</a> -&gt;
([&gt; `Flushed of Remote_name.t <a href="../core/Std.List.html#TYPEt">Core.Std.List.t</a> ] *
 [&gt; `Not_flushed of Remote_name.t <a href="../core/Std.List.html#TYPEt">Core.Std.List.t</a> ])
<a href="../async_core/Deferred.html#TYPEt">Async_core.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> shutdown : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; unit <a href="../async_unix/Import.Deferred.html#TYPEt">Async_unix.Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt;
Remote_name.t -&gt;
Send.t -&gt; [&gt; `Dropped | `Sent of <a href="../core/Std.Time.html#TYPEt">Core.Std.Time.t</a> ] <a href="../async_core/Deferred.html#TYPEt">Async_core.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send_ignore_errors : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Remote_name.t -&gt; Send.t -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send_to_all : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Send.t -&gt; [ `Dropped | `Partial_success | `Sent ] <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send_to_all_ignore_errors : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Send.t -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send_to_some : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt;
Send.t -&gt;
Remote_name.t list -&gt;
[ `Dropped | `Partial_success | `Sent ] <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> send_to_some_ignore_errors : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Send.t -&gt; Remote_name.t list -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> client_is_authorized : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; <a href="Import.Unix.Inet_addr.html#TYPEt">Import.Unix.Inet_addr.t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> close : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Remote_name.t -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> handle_client : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; <a href="Import.Unix.Inet_addr.html#TYPEt">Import.Unix.Inet_addr.t</a> -&gt; int -&gt; <a href="../async_unix/Fd.html#TYPEt">Async_unix.Fd.t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> listen : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; (Remote_name.t, Recv.t) <a href="Versioned_typed_tcp.Server_msg.html#TYPEt">Server_msg.t</a> <a href="Import.Tail.Stream.html#TYPEt">Import.Tail.Stream.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> listen_ignore_errors : <code class="type">?stop:unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a> -&gt; <a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Recv.t <a href="Import.Stream.html#TYPEt">Import.Stream.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">?logfun:<a href="Versioned_typed_tcp.Make.html#TYPElogfun">logfun</a> -&gt;
?now:(unit -&gt; <a href="../core/Std.Time.html#TYPEt">Core.Std.Time.t</a>) -&gt;
?enforce_unique_remote_name:bool -&gt;
?is_client_ip_authorized:(string -&gt; bool) -&gt;
?warn_when_free_connections_lte_pct:float -&gt;
?max_clients:int -&gt; listen_port:int -&gt; My_name.t -&gt; <a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> port : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> client_send_version : <code class="type"><a href="Versioned_typed_tcp.Make.Server.html#TYPEt">t</a> -&gt; Remote_name.t -&gt; <a href="Versioned_typed_tcp.Version.html#TYPEt">Version.t</a> option</code></span></pre>
      
    
