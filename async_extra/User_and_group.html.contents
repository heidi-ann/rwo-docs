<br/>Wrapper around Core.Std.User_and_group with a deferred <code class="code">for_this_process</code> /
    <code class="code">for_this_process_exn</code>.<br/>
	  
<pre><span id="TYPEt"><span class="keyword">type</span> t </span>= <code class="type"><a href="../core/Std.User_and_group.html#TYPEt">Core.Std.User_and_group.t</a></code> </pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="../core/Std.Identifiable.html">Core.Std.Identifiable</a></code> with type t = <a href="User_and_group.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="../core/Std.Identifiable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> create : <code class="type">user:string -&gt; group:string -&gt; <a href="User_and_group.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> user : <code class="type"><a href="User_and_group.html#TYPEt">t</a> -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> group : <code class="type"><a href="User_and_group.html#TYPEt">t</a> -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_this_process : <code class="type">unit -&gt; <a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Or_error.html#TYPEt">Core.Std.Or_error.t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_this_process_exn : <code class="type">unit -&gt; <a href="User_and_group.html#TYPEt">t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">(int -&gt; <a href="User_and_group.html#TYPEt">t</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="User_and_group.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type"><a href="User_and_group.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
