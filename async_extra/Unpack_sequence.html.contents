<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Unpack_sequence.Result.html">Result</a> : <code class="code">sig</code> <a href="Unpack_sequence.Result.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Unpack_sequence.Result.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> unpack_from_string_pipe : <code class="type">('a, 'b) <a href="../core/Std.Unpack_buffer.html#TYPEt">Core.Std.Unpack_buffer.t</a> -&gt;
string <a href="Import.Pipe.Reader.html#TYPEt">Import.Pipe.Reader.t</a> -&gt;
'a <a href="Import.Pipe.Reader.html#TYPEt">Import.Pipe.Reader.t</a> * ('a, 'b) <a href="Unpack_sequence.Result.html#TYPEt">Result.t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      <div class="info"><code class="code">unpack_from_string_pipe unpack_buffer input</code> returns <code class="code">(output, result)</code>, and uses
    <code class="code">unpack_buffer</code> to unpack values from <code class="code">input</code> until <code class="code">input</code> is closed.  It puts the
    unpacked values into <code class="code">output</code>, which is closed once unpacking finishes, normally
    or due to an error.  <code class="code">result</code> indicates why unpacking finished.<br/>    <code class="code">unpack_from_reader</code> and <code class="code">unpack_bin_prot_from_reader</code> are similar.  They are more
    efficient in that they blit bytes directly from the reader buffer to the unpack
    buffer, without any intervening allocation.</div>
    
 
      <pre><span><span class="keyword">val</span> unpack_from_reader : <code class="type">('a, 'b) <a href="../core/Std.Unpack_buffer.html#TYPEt">Core.Std.Unpack_buffer.t</a> -&gt;
<a href="Import.Reader.html#TYPEt">Import.Reader.t</a> -&gt;
'a <a href="Import.Pipe.Reader.html#TYPEt">Import.Pipe.Reader.t</a> * ('a, 'b) <a href="Unpack_sequence.Result.html#TYPEt">Result.t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> unpack_bin_prot_from_reader : <code class="type">'a <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a> -&gt;
<a href="Import.Reader.html#TYPEt">Import.Reader.t</a> -&gt;
'a <a href="Import.Pipe.Reader.html#TYPEt">Import.Pipe.Reader.t</a> * ('a, unit) <a href="Unpack_sequence.Result.html#TYPEt">Result.t</a> <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
