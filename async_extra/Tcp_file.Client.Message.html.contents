<pre><code><span id="TYPEt"><span class="keyword">type</span> t </span>= </code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.String"><span class="constructor">String</span></span> <span class="keyword">of</span> <code class="type">string</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Bigstring"><span class="constructor">Bigstring</span></span> <span class="keyword">of</span> <code class="type"><a href="../core/Std.Bigstring.html#TYPEt">Core.Std.Bigstring.t</a></code></code></td>
	   </tr></table>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_string : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> -&gt; string option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_string_exn : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_bigstring : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> -&gt; <a href="../core/Std.Bigstring.html#TYPEt">Core.Std.Bigstring.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">(int -&gt; <a href="Tcp_file.Client.Message.html#TYPEt">t</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type"><a href="Tcp_file.Client.Message.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
<br/>None is returned in cases where the message cannot fit into a string (original
        message was a very large Bigstring<br/>
	  
