<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Read_write.Key.html">Key</a> : <code class="code">sig</code> <a href="Read_write.Key.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Read_write.Key.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><code><span id="TYPEany"><span class="keyword">type</span> <code class="type">('a, +'z) </code>any </span>= {<span class="keyword">private</span></code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTany.read">read</span> :<code class="type">'a</code>;</code></td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code><span class="keyword">mutable</span> <span id="TYPEELTany.write">write</span> :<code class="type">'a</code>;</code></td>
	  </tr></table>}
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Read_write.Immutable.html">Immutable</a> : <code class="code">sig</code> <a href="Read_write.Immutable.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Read_write.Immutable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Read_write.Read_only.html">Read_only</a> : <code class="code">sig</code> <a href="Read_write.Read_only.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Read_write.Read_only.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Read_write.Mutable.html">Mutable</a> : <code class="code">sig</code> <a href="Read_write.Mutable.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Read_write.Mutable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'a </code>t </span>= <code class="type">'a <a href="Read_write.Immutable.html#TYPEt">Immutable.t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">read:'a -&gt; write:'a -&gt; ('a, 'b) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> createi : <code class="type">(<a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a) -&gt; ('a, 'b) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create_both : <code class="type">'a -&gt; ('a, 'b) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create_fn : <code class="type">(unit -&gt; 'a) -&gt; ('a, 'b) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create_with : <code class="type"><a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a -&gt; zero:'a -&gt; ('a, 'b) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> copy : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; ('a, 'c) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; f:('a -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; f:('a -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iteri : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; f:(<a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; f:('a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mapi : <code class="type">('a, 'c) <a href="Read_write.html#TYPEany">any</a> -&gt; f:(<a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a -&gt; 'b) -&gt; ('b, 'd) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">('a, 'c) <a href="Read_write.html#TYPEany">any</a> -&gt; f:('a -&gt; 'b) -&gt; ('b, 'd) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> foldi : <code class="type">('a, 'c) <a href="Read_write.html#TYPEany">any</a> -&gt; 'b -&gt; f:('b -&gt; <a href="Read_write.Key.html#TYPEt">Key.t</a> * 'a -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">('a, 'c) <a href="Read_write.html#TYPEany">any</a> -&gt; 'b -&gt; f:('b -&gt; 'a -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> get : <code class="type">('a, 'b) <a href="Read_write.html#TYPEany">any</a> -&gt; <a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> replace : <code class="type">'a <a href="Read_write.Mutable.html#TYPEt">Mutable.t</a> -&gt; <a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; f:('a -&gt; 'a) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> replace_all : <code class="type">'a <a href="Read_write.Mutable.html#TYPEt">Mutable.t</a> -&gt; f:(<a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a -&gt; 'a) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> set : <code class="type">'a <a href="Read_write.Mutable.html#TYPEt">Mutable.t</a> -&gt; <a href="Read_write.Key.html#TYPEt">Key.t</a> -&gt; 'a -&gt; unit</code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Read_write.Export.html">Export</a> : <code class="code">sig</code> <a href="Read_write.Export.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Read_write.Export.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> any_of_sexp : <code class="type">(<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'a) -&gt;
(<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'z) -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; ('a, 'z) <a href="Read_write.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_any : <code class="type">('a -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt;
('z -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt; ('a, 'z) <a href="Read_write.html#TYPEany">any</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type">(<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'a) -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'a <a href="Read_write.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type">('a -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt; 'a <a href="Read_write.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
