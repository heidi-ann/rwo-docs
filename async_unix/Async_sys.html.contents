 
      <pre><span><span class="keyword">val</span> argv : <code class="type">string array</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> executable_name : <code class="type">string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> file_exists : <code class="type">string -&gt; [ `No | `Unknown | `Yes ] <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> file_exists_exn : <code class="type">string -&gt; bool <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> when_file_exists : <code class="type">?poll_delay:<a href="../core/Std.Time.Span.html#TYPEt">Core.Std.Time.Span.t</a> -&gt; string -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      <div class="info"><code class="code">when_file_exists ?poll_delay file</code> returns a deferred that becomes determined when
    <code class="code">file</code> exists.  The default poll delay is 0.5 seconds.  It raises an exception if it
    can not check whether the file is there, in the same cases <code class="code">file_exists</code> returns
    <code class="code">`Unknown</code>.</div>
    
 
      <pre><span><span class="keyword">val</span> is_directory : <code class="type">?follow_symlinks:bool -&gt;
string -&gt; [ `No | `Unknown | `Yes ] <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_directory_exn : <code class="type">?follow_symlinks:bool -&gt; string -&gt; bool <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_file : <code class="type">?follow_symlinks:bool -&gt;
string -&gt; [ `No | `Unknown | `Yes ] <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_file_exn : <code class="type">?follow_symlinks:bool -&gt; string -&gt; bool <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">string -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> rename : <code class="type">string -&gt; string -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> getenv : <code class="type">string -&gt; string option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> getenv_exn : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> command : <code class="type">string -&gt; int <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> command_exn : <code class="type">string -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> chdir : <code class="type">string -&gt; unit <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> getcwd : <code class="type">unit -&gt; string <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> readdir : <code class="type">string -&gt; string array <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ls_dir : <code class="type">string -&gt; string list <a href="Import.Deferred.html#TYPEt">Import.Deferred.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> interactive : <code class="type">bool <a href="../stdlib/Pervasives.html#TYPEref">ref</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> os_type : <code class="type">string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> word_size : <code class="type">int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ocaml_version : <code class="type">string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> execution_mode : <code class="type">unit -&gt; [ `Bytecode | `Native ]</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> c_int_size : <code class="type">unit -&gt; int</code></span></pre>
      
    
