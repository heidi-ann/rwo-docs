<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Byte_units.Measure.html">Measure</a> : <code class="code">sig</code> <a href="Byte_units.Measure.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Byte_units.Measure.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEt"><span class="keyword">type</span> t </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type"><a href="Byte_units.Measure.html#TYPEt">Measure.t</a> -&gt; float -&gt; <a href="Byte_units.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">create measure value</code> creates a <code class="code">t</code> from <code class="code">value</code> units of the given measure.</div>
    
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="Comparable.S.html">Comparable.S</a></code> with type t = <a href="Byte_units.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="Comparable.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="Hashable.S.html">Hashable.S</a></code> with type t = <a href="Byte_units.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="Hashable.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="Stringable.S.html">Stringable.S</a></code> with type t = <a href="Byte_units.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="Stringable.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> to_string_hum : <code class="type">?measure:<a href="Byte_units.Measure.html#TYPEt">Measure.t</a> -&gt; <a href="Byte_units.html#TYPEt">t</a> -&gt; string</code></span></pre>
      <div class="info"><code class="code">to_string_hum ?measure t</code> returns a string representation of <code class="code">t</code>.  If <code class="code">measure</code> is
    not given then the largest measure (excluding <code class="code">`Words</code>) is used that causes the
    translated value to exceed 1.</div>
    
 
      <pre><span><span class="keyword">val</span> bytes : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> kilobytes : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> megabytes : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> gigabytes : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> words : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> scale : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; float -&gt; <a href="Byte_units.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">scale t mul</code> scale the measure <code class="code">t</code> by <code class="code">mul</code> </div>
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Byte_units.Infix.html">Infix</a> : <code class="code">sig</code> <a href="Byte_units.Infix.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Byte_units.Infix.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Byte_units.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Type_class.html#TYPEt">Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Read_ml.html#TYPEreader">Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Unsafe_read_c.html#TYPEreader">Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">(int -&gt; <a href="Byte_units.html#TYPEt">t</a>) <a href="../bin_prot/Unsafe_read_c.html#TYPEreader">Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Type_class.html#TYPEreader">Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Size.html#TYPEsizer">Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Write_ml.html#TYPEwriter">Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Unsafe_write_c.html#TYPEwriter">Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type"><a href="Byte_units.html#TYPEt">t</a> <a href="../bin_prot/Type_class.html#TYPEwriter">Bin_prot.Type_class.writer</a></code></span></pre>
      
    
<br/><code class="code">create measure value</code> creates a <code class="code">t</code> from <code class="code">value</code> units of the given measure.<br/>
	  
<br/><code class="code">to_string_hum ?measure t</code> returns a string representation of <code class="code">t</code>.  If <code class="code">measure</code> is
    not given then the largest measure (excluding <code class="code">`Words</code>) is used that causes the
    translated value to exceed 1.<br/>
	  
<br/><code class="code">scale t mul</code> scale the measure <code class="code">t</code> by <code class="code">mul</code> <br/>
	  
<br/><code class="code">( / ) t mul</code> scales <code class="code">t</code> by <code class="code">1/mul</code> <br/>
	  
<br/><code class="code">( // ) t1 t2</code> returns the ratio of t1 to t2<br/>
	  
