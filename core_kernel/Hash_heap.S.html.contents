<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Hash_heap.S.Key.html">Key</a> : <code class="code"><a href="Hash_heap.Key.html">Key</a></code></pre>
	<div class="content" style="display:none">
	<div file="Hash_heap.S.Key.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'a </code>t </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">?min_size:int -&gt; ('a -&gt; 'a -&gt; int) -&gt; 'a <a href="Hash_heap.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> copy : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; 'a <a href="Hash_heap.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> push : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; key:<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; data:'a -&gt; [ `Key_already_present | `Ok ]</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> push_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; key:<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; data:'a -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> replace : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; key:<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; data:'a -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> top : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> top_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> top_with_key : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; (<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> top_with_key_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> * 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> pop_with_key : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; (<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> pop_with_key_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> * 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> pop : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> pop_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> cond_pop_with_key : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; (key:<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; data:'a -&gt; bool) -&gt; (<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> cond_pop : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; ('a -&gt; bool) -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_pop : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_pop_exn : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; <a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; f:(key:<a href="Hash_heap.S.Key.html#TYPEt">Key.t</a> -&gt; data:'a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter_vals : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; f:('a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">'a <a href="Hash_heap.S.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
