 
      <pre><span><span class="keyword">val</span> names : <code class="type">string list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> stack_size : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> top_heap_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> compactions : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fragments : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> largest_free : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> free_blocks : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> free_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> live_blocks : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> live_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> heap_chunks : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> heap_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> major_collections : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> minor_collections : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> major_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> promoted_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> minor_words : <code class="type">(<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">init:'acc__ -&gt;
minor_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
promoted_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
major_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
minor_collections:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
major_collections:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
heap_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
heap_chunks:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
live_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
live_blocks:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
free_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
free_blocks:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
largest_free:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
fragments:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
compactions:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
top_heap_words:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt;
stack_size:('acc__ -&gt; (<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'acc__) -&gt; 'acc__</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> make_creator : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; float) * 'compile_acc__) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
                'compile_acc__ -&gt; ('input__ -&gt; float) * 'compile_acc__) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; float) * 'compile_acc__) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
                   'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
                   'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
            'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
            'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
            'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
              'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
           'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
             'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
                'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt;
            'compile_acc__ -&gt; ('input__ -&gt; int) * 'compile_acc__) -&gt;
'compile_acc__ -&gt; ('input__ -&gt; <a href="Core_gc.Stat.html#TYPEt">t</a>) * 'compile_acc__</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">minor_words:float -&gt;
promoted_words:float -&gt;
major_words:float -&gt;
minor_collections:int -&gt;
major_collections:int -&gt;
heap_words:int -&gt;
heap_chunks:int -&gt;
live_words:int -&gt;
live_blocks:int -&gt;
free_words:int -&gt;
free_blocks:int -&gt;
largest_free:int -&gt;
fragments:int -&gt; compactions:int -&gt; top_heap_words:int -&gt; stack_size:int -&gt; <a href="Core_gc.Stat.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; float) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; float) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; float) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; int) -&gt; <a href="Core_gc.Stat.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_list : <code class="type">minor_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
promoted_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
major_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, float) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
minor_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
major_collections:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
heap_chunks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
live_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
live_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
free_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
free_blocks:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
largest_free:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
fragments:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
compactions:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
top_heap_words:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt;
stack_size:((<a href="Core_gc.Stat.html#TYPEt">t</a>, int) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'elem__) -&gt; 'elem__ list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map_poly : <code class="type">([&lt; `Read | `Set_and_create ], <a href="Core_gc.Stat.html#TYPEt">t</a>, 'x0) <a href="../fieldslib/Field.html#TYPEuser">Fieldslib.Field.user</a> -&gt; 'x0 list</code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Core_gc.Stat.Fields.Direct.html">Direct</a> : <code class="code">sig</code> <a href="Core_gc.Stat.Fields.Direct.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Core_gc.Stat.Fields.Direct.html.contents" class="content_to_load"> </div>
	</div>
  </div>
