<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Core_gc.Stat.html">Stat</a> : <code class="code">sig</code> <a href="Core_gc.Stat.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Core_gc.Stat.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEstat"><span class="keyword">type</span> stat </span>= <code class="type"><a href="Core_gc.Stat.html#TYPEt">Stat.t</a></code> </pre>
      
    
<br/>The memory management counters are returned in a <code class="code">stat</code> record.<br/>   The total amount of memory allocated by the program since it was started
   is (in words) <code class="code">minor_words + major_words - promoted_words</code>.  Multiply by
   the word size (4 on a 32-bit machine, 8 on a 64-bit machine) to get
   the number of bytes.<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Core_gc.Control.html">Control</a> : <code class="code">sig</code> <a href="Core_gc.Control.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Core_gc.Control.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEcontrol"><span class="keyword">type</span> control </span>= <code class="type"><a href="Core_gc.Control.html#TYPEt">Control.t</a></code> </pre>
      
    
<br/>The GC parameters are given as a <code class="code">control</code> record.
    Note that these parameters can also be initialised
    by setting the OCAMLRUNPARAM environment variable.
    See the documentation of ocamlrun.<br/>
	  
 
      <pre><span><span class="keyword">val</span> stat : <code class="type">unit -&gt; <a href="Core_gc.html#TYPEstat">stat</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> quick_stat : <code class="type">unit -&gt; <a href="Core_gc.html#TYPEstat">stat</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> counters : <code class="type">unit -&gt; float * float * float</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> get : <code class="type">unit -&gt; <a href="Core_gc.html#TYPEcontrol">control</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> set : <code class="type"><a href="Core_gc.html#TYPEcontrol">control</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> minor : <code class="type">unit -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> major_slice : <code class="type">int -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> major : <code class="type">unit -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> full_major : <code class="type">unit -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> compact : <code class="type">unit -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> print_stat : <code class="type"><a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> allocated_bytes : <code class="type">unit -&gt; float</code></span></pre>
      
    
<pre><span id="TYPEalarm"><span class="keyword">type</span> alarm </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create_alarm : <code class="type">(unit -&gt; unit) -&gt; <a href="Core_gc.html#TYPEalarm">alarm</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> delete_alarm : <code class="type"><a href="Core_gc.html#TYPEalarm">alarm</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> tune : <code class="type">?logger:(string -&gt; unit) -&gt;
?minor_heap_size:int -&gt;
?major_heap_increment:int -&gt;
?space_overhead:int -&gt;
?verbose:int -&gt;
?max_overhead:int -&gt;
?stack_limit:int -&gt; ?allocation_policy:int -&gt; unit -&gt; unit</code></span></pre>
      <div class="info">Adjust the specified GC parameters.</div>
    
