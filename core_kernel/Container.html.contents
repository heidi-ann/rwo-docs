 
      <pre><span><span class="keyword">val</span> __pa_ounit_275876e34cf609db118f3d84b799a790 : <code class="type">string</code></span></pre>
      
    

<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.T.html">T</a> = <code class="type"><code class="code">sig</code> <a href="Container.T.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.T.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> fold_count : <code class="type">('a -&gt; init:int -&gt; f:(int -&gt; 'b -&gt; int) -&gt; 'c) -&gt; 'a -&gt; f:('b -&gt; bool) -&gt; 'c</code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Make.html">Make</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">T</code><code class="code"> : </code><code class="type"><a href="Container.T.html">T</a></code><code class="code">) -&gt; </code><code class="code">sig</code> <a href="Container.Make.html">..</a> <code class="code">end</code></div></pre><div class="info">The idiom for using <code class="code">Container.Make</code> is to bind the resulting module and to explicitly
    import each of the functions that one wants:<br/>    <pre class="codepre"><code class="code">
      module C = Container.Make (struct ... end)
      let count    = C.count
      let exists   = C.exists
      let find     = C.find
      ...
    </code></pre><br/>    This is preferable to:<br/>    <pre class="codepre"><code class="code">
      include Container.Make (struct ... end)
    </code></pre><br/>    because the <code class="code">include</code> makes it to easy to shadow specialized implementations of
    container functions (<code class="code">length</code> being a common one).</div>
	<div class="content" style="display:none">
	<div file="Container.Make.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.S0.html">S0</a> = <code class="type"><code class="code">sig</code> <a href="Container.S0.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.S0.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.S0_phantom.html">S0_phantom</a> = <code class="type"><code class="code">sig</code> <a href="Container.S0_phantom.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.S0_phantom.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.S1.html">S1</a> = <code class="type"><code class="code">sig</code> <a href="Container.S1.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.S1.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.S1_phantom.html">S1_phantom</a> = <code class="type"><code class="code">sig</code> <a href="Container.S1_phantom.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.S1_phantom.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.S1_phantom_invariant.html">S1_phantom_invariant</a> = <code class="type"><code class="code">sig</code> <a href="Container.S1_phantom_invariant.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.S1_phantom_invariant.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.Generic.html">Generic</a> = <code class="type"><code class="code">sig</code> <a href="Container.Generic.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.Generic.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Container.Generic_phantom.html">Generic_phantom</a> = <code class="type"><code class="code">sig</code> <a href="Container.Generic_phantom.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Container.Generic_phantom.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check.html">Check</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">T</code><code class="code"> : </code><code class="type"><a href="T.T1.html">T.T1</a></code><code class="code">) -&gt; </code><div class="sig_block"><code class="code">functor (</code><code class="code">Elt</code><code class="code"> : </code><code class="type"><a href="T.T1.html">T.T1</a></code><code class="code">) -&gt; </code><div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="code"><a href="Container.Generic.html">Generic</a></code> with type <a href="Container.Generic.html#TYPEt">t</a> = 'a T.t with type elt = 'a Elt.t<code class="code">) -&gt; </code><code class="code">sig</code> <a href="Container.Check.html">..</a> <code class="code">end</code></div></div></div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check_S0.html">Check_S0</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="type"><a href="Container.S0.html">S0</a></code><code class="code">) -&gt; </code>HTML_OF_MODULE_IDENT BUG(<code class="code">M</code>)</div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check_S0.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check_S0_phantom.html">Check_S0_phantom</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="type"><a href="Container.S0_phantom.html">S0_phantom</a></code><code class="code">) -&gt; </code>HTML_OF_MODULE_IDENT BUG(<code class="code">M</code>)</div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check_S0_phantom.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check_S1.html">Check_S1</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="type"><a href="Container.S1.html">S1</a></code><code class="code">) -&gt; </code>HTML_OF_MODULE_IDENT BUG(<code class="code">M</code>)</div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check_S1.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<pre><span id="TYPEphantom"><span class="keyword">type</span> phantom </span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check_S1_phantom.html">Check_S1_phantom</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="type"><a href="Container.S1_phantom.html">S1_phantom</a></code><code class="code">) -&gt; </code>HTML_OF_MODULE_IDENT BUG(<code class="code">M</code>)</div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check_S1_phantom.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Container.Check_S1_phantom_invariant.html">Check_S1_phantom_invariant</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">M</code><code class="code"> : </code><code class="type"><a href="Container.S1_phantom_invariant.html">S1_phantom_invariant</a></code><code class="code">) -&gt; </code>HTML_OF_MODULE_IDENT BUG(<code class="code">M</code>)</div></pre>
	<div class="content" style="display:none">
	<div file="Container.Check_S1_phantom_invariant.html.contents" class="content_to_load"> </div>
	</div>
  </div>

