 
      <pre><span><span class="keyword">val</span> int_to_int32 : <code class="type">int -&gt; int32 option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int_to_int32_exn : <code class="type">int -&gt; int32</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int_to_int64 : <code class="type">int -&gt; int64</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int_to_nativeint : <code class="type">int -&gt; nativeint</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int32_to_int : <code class="type">int32 -&gt; int option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int32_to_int_exn : <code class="type">int32 -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int32_to_int64 : <code class="type">int32 -&gt; int64</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int32_to_nativeint : <code class="type">int32 -&gt; nativeint</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_int : <code class="type">int64 -&gt; int option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_int_exn : <code class="type">int64 -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_int32 : <code class="type">int64 -&gt; int32 option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_int32_exn : <code class="type">int64 -&gt; int32</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_nativeint : <code class="type">int64 -&gt; nativeint option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int64_to_nativeint_exn : <code class="type">int64 -&gt; nativeint</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nativeint_to_int : <code class="type">nativeint -&gt; int option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nativeint_to_int_exn : <code class="type">nativeint -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nativeint_to_int32 : <code class="type">nativeint -&gt; int32 option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nativeint_to_int32_exn : <code class="type">nativeint -&gt; int32</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nativeint_to_int64 : <code class="type">nativeint -&gt; int64</code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Int_conversions.Make.html">Make</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">I</code><code class="code"> : </code><code class="code">sig</code> <a href="Int_conversions.Make.Anon_5.html">..</a> <code class="code">end</code><code class="code">) -&gt; </code><code class="code">sig</code> <a href="Int_conversions.Make.html">..</a> <code class="code">end</code></div></pre>
	<div class="content" style="display:none">
	<div file="Int_conversions.Make.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> sexp_of_int_style : <code class="type">[ `No_underscores | `Underscores ] <a href="../stdlib/Pervasives.html#TYPEref">ref</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> insert_delimiter : <code class="type">string -&gt; delimiter:char -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> insert_underscores : <code class="type">string -&gt; string</code></span></pre>
      
    
