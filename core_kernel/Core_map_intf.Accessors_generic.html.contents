<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">('a, 'b, 'cmp) </code>t </span></pre>
      
    
<pre><span id="TYPEtree"><span class="keyword">type</span> <code class="type">('a, 'b, 'cmp) </code>tree </span></pre>
      
    
<pre><span id="TYPEkey"><span class="keyword">type</span> <code class="type">'a </code>key </span></pre>
      
    
<pre><span id="TYPEoptions"><span class="keyword">type</span> <code class="type">('a, 'cmp, 'z) </code>options </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> invariants : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; bool) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_empty : <code class="type">('a, 'b, 'c) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">('a, 'b, 'c) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add_multi : <code class="type">('k, 'cmp,
 ('k, 'v list, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; ('k, 'v list, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> change : <code class="type">('k, 'cmp,
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; ('v option -&gt; 'v option) -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; 'v option) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_exn : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; 'v) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">('k, 'cmp, ('k, 'a, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; bool) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter2 : <code class="type">('k, 'cmp,
 ('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt;
    data:[ `Both of 'v1 * 'v2 | `Left of 'v1 | `Right of 'v2 ] -&gt; unit) -&gt;
 unit)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:('v1 -&gt; 'v2) -&gt; ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mapi : <code class="type">('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v1 -&gt; 'v2) -&gt; ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">('k, 'v, 'b) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; init:'a -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; 'a -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold_right : <code class="type">('k, 'v, 'b) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; init:'a -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; 'a -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">('k, 'cmp,
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; bool) -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_map : <code class="type">('k, 'cmp, ('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:('v1 -&gt; 'v2 option) -&gt; ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_mapi : <code class="type">('k, 'cmp,
 ('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v1 -&gt; 'v2 option) -&gt; ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> compare_direct : <code class="type">('k, 'cmp, ('v -&gt; 'v -&gt; int) -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; int)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> equal : <code class="type">('k, 'cmp,
 ('v -&gt; 'v -&gt; bool) -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; bool)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> keys : <code class="type">('k, 'a, 'b) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> data : <code class="type">('a, 'v, 'b) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'v list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> validate : <code class="type">name:('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; string) -&gt; 'v <a href="Validate.html#TYPEcheck">Validate.check</a> -&gt; ('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> <a href="Validate.html#TYPEcheck">Validate.check</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> merge : <code class="type">('k, 'cmp,
 ('k, 'v1, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 ('k, 'v2, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt;
    [ `Both of 'v1 * 'v2 | `Left of 'v1 | `Right of 'v2 ] -&gt; 'v3 option) -&gt;
 ('k, 'v3, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a>)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> symmetric_diff : <code class="type">('k, 'cmp,
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 data_equal:('v -&gt; 'v -&gt; bool) -&gt;
 ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * [ `Left of 'v | `Right of 'v | `Unequal of 'v * 'v ]) list)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> min_elt : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> min_elt_exn : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> max_elt : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> max_elt_exn : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:('v -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">('k, 'v, 'a) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; f:('v -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold_range_inclusive : <code class="type">('k, 'cmp,
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt;
 min:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt;
 max:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; init:'a -&gt; f:(key:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; data:'v -&gt; 'a -&gt; 'a) -&gt; 'a)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> range_to_alist : <code class="type">('k, 'cmp,
 ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; min:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; max:'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) list)
<a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> prev_key : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) option) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> next_key : <code class="type">('k, 'cmp, ('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> * 'v) option) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> rank : <code class="type">('k, 'cmp, ('k, 'a, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; 'k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a> -&gt; int option) <a href="Core_map_intf.Accessors_generic.html#TYPEoptions">options</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_tree : <code class="type">('k, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEt">t</a> -&gt; ('k <a href="Core_map_intf.Accessors_generic.html#TYPEkey">key</a>, 'v, 'cmp) <a href="Core_map_intf.Accessors_generic.html#TYPEtree">tree</a></code></span></pre>
      
    
