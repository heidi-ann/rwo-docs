<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'a </code>t </span></pre>
      
    
<pre><span id="TYPEtree"><span class="keyword">type</span> <code class="type">'a </code>tree </span></pre>
      
    
<pre><span id="TYPEkey"><span class="keyword">type</span> key </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> invariants : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_empty : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add_multi : <code class="type">'a list <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'a list <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> change : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; ('a option -&gt; 'a option) -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_exn : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter2 : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:[ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -&gt; unit) -&gt;
unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:('a -&gt; 'b) -&gt; 'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mapi : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'b) -&gt; 'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; init:'b -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'b -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold_right : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; init:'b -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'b -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; bool) -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_map : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:('a -&gt; 'b option) -&gt; 'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_mapi : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'b option) -&gt; 'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> compare_direct : <code class="type">('a -&gt; 'a -&gt; int) -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> equal : <code class="type">('a -&gt; 'a -&gt; bool) -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> keys : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> data : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; 'a list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> validate : <code class="type">name:(<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; string) -&gt; 'a <a href="Validate.html#TYPEcheck">Validate.check</a> -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> <a href="Validate.html#TYPEcheck">Validate.check</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> merge : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
'b <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -&gt; 'c option) -&gt;
'c <a href="Core_map_intf.Accessors1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> symmetric_diff : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
data_equal:('a -&gt; 'a -&gt; bool) -&gt;
(<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * [ `Left of 'a | `Right of 'a | `Unequal of 'a * 'a ]) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> min_elt : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> min_elt_exn : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> max_elt : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> max_elt_exn : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:('a -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; f:('a -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold_range_inclusive : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt;
min:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; max:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; init:'b -&gt; f:(key:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; data:'a -&gt; 'b -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> range_to_alist : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; min:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; max:<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> prev_key : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> next_key : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; (<a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> * 'a) option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> rank : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; <a href="Core_map_intf.Accessors1.html#TYPEkey">key</a> -&gt; int option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_tree : <code class="type">'a <a href="Core_map_intf.Accessors1.html#TYPEt">t</a> -&gt; 'a <a href="Core_map_intf.Accessors1.html#TYPEtree">tree</a></code></span></pre>
      
    
