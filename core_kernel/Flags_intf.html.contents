 
      <pre><span><span class="keyword">val</span> __pa_ounit_275876e34cf609db118f3d84b799a790 : <code class="type">string</code></span></pre>
      
    

<br/><code class="code">module Flags</code> implements Unix-style sets of flags that are represented as
    an <code class="code">int</code> with various bits set, one bit for each flag.  E.g. <code class="code">Linux_ext.Epoll.Flag</code>.<br/>    <code class="code">Flags</code> defines a module type <code class="code">Flags.S</code>, the interface for a flags, and a functor
    <code class="code">Flags.Make</code> for creating a flags implementation.<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Flags_intf.Int63.html">Int63</a> : <code class="code"><a href="Core_int63.html">Core_int63</a></code></pre>
	<div class="content" style="display:none">
	<div file="Flags_intf.Int63.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Flags_intf.S.html">S</a> = <code class="type"><code class="code">sig</code> <a href="Flags_intf.S.html">..</a> <code class="code">end</code></code></pre><div class="info"><code class="code">module type S</code> is the interface for a set of flags.  Values of <code class="code">type t</code> are set of
    flags, and the various functions operate on sets of flags.  There is a finite universe
    of flags (in particular 63 flags, one for each bit).<br/>    <code class="code">sexp_of_t</code> uses the flag names supplied to <code class="code">Flags.Make</code> </div>
	<div class="content" style="display:none">
	<div file="Flags_intf.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>

<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Flags_intf.Make_arg.html">Make_arg</a> = <code class="type"><code class="code">sig</code> <a href="Flags_intf.Make_arg.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Flags_intf.Make_arg.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Flags_intf.Flags.html">Flags</a> = <code class="type"><code class="code">sig</code> <a href="Flags_intf.Flags.html">..</a> <code class="code">end</code></code></pre>
	<div class="content" style="display:none">
	<div file="Flags_intf.Flags.html.contents" class="content_to_load"> </div>
	</div>
  </div>

