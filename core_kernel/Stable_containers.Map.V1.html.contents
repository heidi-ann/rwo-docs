<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'a </code>t </span>= <code class="type">(Key.t, 'a, Key.comparator) <a href="Std.Map.html#TYPEt">Std.Map.t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type">'a <a href="Std.Bin_prot.Type_class.html#TYPEt">Std.Bin_prot.Type_class.t</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Type_class.html#TYPEt">Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type">'a <a href="Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Std.Bin_prot.Unsafe_read_c.reader</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Read_ml.html#TYPEreader">Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type">'a <a href="Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Std.Bin_prot.Unsafe_read_c.reader</a> -&gt;
'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">'a <a href="Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Std.Bin_prot.Unsafe_read_c.reader</a> -&gt;
(int -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a>) <a href="Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type">'a <a href="Std.Bin_prot.Type_class.html#TYPEreader">Std.Bin_prot.Type_class.reader</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Type_class.html#TYPEreader">Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type">'a <a href="Std.Bin_prot.Size.html#TYPEsizer">Std.Bin_prot.Size.sizer</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Size.html#TYPEsizer">Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type">'a <a href="Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Std.Bin_prot.Unsafe_write_c.writer</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Write_ml.html#TYPEwriter">Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type">'a <a href="Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Std.Bin_prot.Unsafe_write_c.writer</a> -&gt;
'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type">'a <a href="Std.Bin_prot.Type_class.html#TYPEwriter">Std.Bin_prot.Type_class.writer</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> <a href="Std.Bin_prot.Type_class.html#TYPEwriter">Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type">(<a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'a) -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type">('a -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt; 'a <a href="Stable_containers.Map.V1.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
