<pre><span id="TYPEt"><span class="keyword">type</span> t </span>= <code class="type"><a href="Nothing0.html#TYPEt">Nothing0.t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> unreachable_code : <code class="type"><a href="Nothing.html#TYPEt">t</a> -&gt; 'a</code></span></pre>
      <div class="info">Because there are no values of type <code class="code">Nothing.t</code>, a piece of code that has a value of
    type <code class="code">Nothing.t</code> must be unreachable.  In such an unreachable piece of code, one can
    use <code class="code">unreachable_code</code> to give the code whatever type one needs.  For example:<br/>    <pre class="codepre"><code class="code">
      let f (r : (int, Nothing.t) Result.t) : int =
        match r with
        | Ok i -&gt; i
        | Error n -&gt; Nothing.unreachable_code n
      ;;
    </code></pre> </div>
    
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="Identifiable.S.html">Identifiable.S</a></code> with type t = <a href="Nothing.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="Identifiable.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Nothing.Stable.html">Stable</a> : <code class="code">sig</code> <a href="Nothing.Stable.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Nothing.Stable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
