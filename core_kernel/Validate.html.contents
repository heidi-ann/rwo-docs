<pre><span id="TYPEt"><span class="keyword">type</span> t </span></pre>
      <div class="info">The result of a validation.  This effectively contains the list of errors, qualified
    by their location path</div>
    
<pre><span id="TYPEcheck"><span class="keyword">type</span> <code class="type">'a </code>check </span>= <code class="type">'a -&gt; <a href="Validate.html#TYPEt">t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> pass : <code class="type"><a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fail : <code class="type">string -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fails : <code class="type">string -&gt; 'a -&gt; ('a -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a>) -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_list : <code class="type"><a href="Validate.html#TYPEt">t</a> list -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> name : <code class="type">string -&gt; <a href="Validate.html#TYPEt">t</a> -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> name_list : <code class="type">string -&gt; <a href="Validate.html#TYPEt">t</a> list -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fail_fn : <code class="type">string -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info"><code class="code">fail_fn err</code> returns a function that always returns fail, with <code class="code">err</code> as the error
    message.  (Note that there is no <code class="code">pass_fn</code> so as to discourage people from ignoring
    the type of the value being passed unconditionally irrespective of type.)</div>
    
 
      <pre><span><span class="keyword">val</span> pass_bool : <code class="type">bool <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Check for unconditionally passing a bool</div>
    
 
      <pre><span><span class="keyword">val</span> pass_unit : <code class="type">unit <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Check for unconditionally passing a unit</div>
    
 
      <pre><span><span class="keyword">val</span> protect : <code class="type">'a <a href="Validate.html#TYPEcheck">check</a> -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info"><code class="code">protect f x</code> applies the validation <code class="code">f</code> to <code class="code">x</code>, catching any exceptions and returning
    them as errors.</div>
    
 
      <pre><span><span class="keyword">val</span> result : <code class="type"><a href="Validate.html#TYPEt">t</a> -&gt; unit <a href="Or_error.html#TYPEt">Or_error.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> errors : <code class="type"><a href="Validate.html#TYPEt">t</a> -&gt; string list</code></span></pre>
      <div class="info">Returns a list of formatted error strings, which include both the error message and
    the path to the error.</div>
    
 
      <pre><span><span class="keyword">val</span> maybe_raise : <code class="type"><a href="Validate.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      <div class="info">If the result contains any errors, then raises an exception with a formatted error
    message containing a message for every error.</div>
    
 
      <pre><span><span class="keyword">val</span> valid_or_error : <code class="type">'a -&gt; 'a <a href="Validate.html#TYPEcheck">check</a> -&gt; 'a <a href="Or_error.html#TYPEt">Or_error.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> field : <code class="type">'record -&gt; ('record, 'a) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; 'a <a href="Validate.html#TYPEcheck">check</a> -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      <div class="info">Used for validating an individual field.</div>
    
 
      <pre><span><span class="keyword">val</span> field_folder : <code class="type">'record -&gt; 'a <a href="Validate.html#TYPEcheck">check</a> -&gt; <a href="Validate.html#TYPEt">t</a> list -&gt; ('record, 'a) <a href="../fieldslib/Field.html#TYPEt">Fieldslib.Field.t</a> -&gt; <a href="Validate.html#TYPEt">t</a> list</code></span></pre>
      <div class="info">Creates a function for use in a <code class="code">Fields.fold</code>.</div>
    
 
      <pre><span><span class="keyword">val</span> all : <code class="type">'a <a href="Validate.html#TYPEcheck">check</a> list -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Combine a list of validation functions into one that does all validations.</div>
    
 
      <pre><span><span class="keyword">val</span> of_result : <code class="type">('a -&gt; (unit, string) <a href="Result.html#TYPEt">Result.t</a>) -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Create a validation function from a function that produces a Result.t</div>
    
 
      <pre><span><span class="keyword">val</span> of_error : <code class="type">('a -&gt; unit <a href="Or_error.html#TYPEt">Or_error.t</a>) -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> booltest : <code class="type">('a -&gt; bool) -&gt; if_false:string -&gt; 'a <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Create a validation function from a function that produces a bool</div>
    
 
      <pre><span><span class="keyword">val</span> pair : <code class="type">fst:'a <a href="Validate.html#TYPEcheck">check</a> -&gt; snd:'b <a href="Validate.html#TYPEcheck">check</a> -&gt; ('a * 'b) <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Validation functions for particular data types.</div>
    
 
      <pre><span><span class="keyword">val</span> list_indexed : <code class="type">'a <a href="Validate.html#TYPEcheck">check</a> -&gt; 'a list <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Validates a list, naming each element by its position in the list (where the first
    position is 1, not 0</div>
    
 
      <pre><span><span class="keyword">val</span> list : <code class="type">name:('a -&gt; string) -&gt; 'a <a href="Validate.html#TYPEcheck">check</a> -&gt; 'a list <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Validates a list, naming each element using a user-defined function for computing the
    name</div>
    
 
      <pre><span><span class="keyword">val</span> first_failure : <code class="type"><a href="Validate.html#TYPEt">t</a> -&gt; <a href="Validate.html#TYPEt">t</a> -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_error_opt : <code class="type">string option -&gt; <a href="Validate.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> alist : <code class="type">name:('a -&gt; string) -&gt; 'b <a href="Validate.html#TYPEcheck">check</a> -&gt; ('a * 'b) list <a href="Validate.html#TYPEcheck">check</a></code></span></pre>
      <div class="info">Validates an association list, naming each element using a user-defined function for
    computing the name.</div>
    
