<pre><span id="TYPErepr"><span class="keyword">type</span> repr </span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Number.Verified_std.S.html">S</a> = <code class="type"><code class="code"><a href="Number.S.html">S</a></code> with type <a href="Number.S.html#TYPErepr">repr</a> = <a href="Number.Verified_std.html#TYPErepr">repr</a></code></pre><div class="info">Abbreviations</div>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.S.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Number.Verified_std.S0.html">S0</a> = <code class="type"><code class="code"><a href="Number.S0.html">S0</a></code> with type repr = <a href="Number.Verified_std.html#TYPErepr">repr</a></code></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.S0.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Pos.html">Pos</a> : <code class="code"><a href="Number.Verified_std.S.html">S</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre><div class="info">Positive and negative numbers with and without zero.</div>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Pos.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Pos0.html">Pos0</a> : <code class="code"><a href="Number.Verified_std.S0.html">S0</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Pos0.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Neg.html">Neg</a> : <code class="code"><a href="Number.Verified_std.S.html">S</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Neg.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Neg0.html">Neg0</a> : <code class="code"><a href="Number.Verified_std.S0.html">S0</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Neg0.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Number.Verified_std.Bounded_spec.html">Bounded_spec</a> = <code class="type"><code class="code">sig</code> <a href="Number.Verified_std.Bounded_spec.html">..</a> <code class="code">end</code></code></pre><div class="info">Specification of bounded numbers</div>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Bounded_spec.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module type</span> <a href="Number.Verified_std.Bounded.html">Bounded</a> = <code class="type"><code class="code">sig</code> <a href="Number.Verified_std.Bounded.html">..</a> <code class="code">end</code></code></pre><div class="info">Signature of bounded numbers</div>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Bounded.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Make_bounded.html">Make_bounded</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Spec</code><code class="code"> : </code><code class="type"><a href="Number.Verified_std.Bounded_spec.html">Bounded_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Number.Verified_std.Bounded.html">Bounded</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></div></pre><div class="info">Functor of creating bounded numbers</div>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Make_bounded.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<br/>Unsafe modules and functors that still fully expose the representation
      for extensibility.<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Pos_unsafe.html">Pos_unsafe</a> : <code class="code"><a href="Number.Verified_std.S.html">S</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Pos_unsafe.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Pos0_unsafe.html">Pos0_unsafe</a> : <code class="code"><a href="Number.Verified_std.S0.html">S0</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Pos0_unsafe.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Neg_unsafe.html">Neg_unsafe</a> : <code class="code"><a href="Number.Verified_std.S.html">S</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Neg_unsafe.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Neg0_unsafe.html">Neg0_unsafe</a> : <code class="code"><a href="Number.Verified_std.S0.html">S0</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Neg0_unsafe.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Number.Verified_std.Make_bounded_unsafe.html">Make_bounded_unsafe</a> : <div class="sig_block"><code class="code">functor (</code><code class="code">Spec</code><code class="code"> : </code><code class="type"><a href="Number.Verified_std.Bounded_spec.html">Bounded_spec</a></code><code class="code">) -&gt; </code><code class="code"><a href="Number.Verified_std.Bounded.html">Bounded</a></code> with type t = <a href="Number.Verified_std.html#TYPErepr">repr</a></div></pre>
	<div class="content" style="display:none">
	<div file="Number.Verified_std.Make_bounded_unsafe.html.contents" class="content_to_load"> </div>
	</div>
  </div>
