<br/>Extensions to <code class="code">Core.Unix</code>.<br/>
	  
 
      <pre><span><span class="keyword">val</span> fork_exec : <code class="type">?stdin:<a href="../core/Std.Unix.File_descr.html#TYPEt">Core.Std.Unix.File_descr.t</a> -&gt;
?stdout:<a href="../core/Std.Unix.File_descr.html#TYPEt">Core.Std.Unix.File_descr.t</a> -&gt;
?stderr:<a href="../core/Std.Unix.File_descr.html#TYPEt">Core.Std.Unix.File_descr.t</a> -&gt;
?path_lookup:bool -&gt;
?env:[ `Extend of (string * string) list | `Replace of (string * string) list ] -&gt;
?working_dir:string -&gt;
?setuid:int -&gt; ?setgid:int -&gt; string -&gt; string list -&gt; <a href="../core/Std.Pid.html#TYPEt">Core.Std.Pid.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> seteuid : <code class="type">int -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> setreuid : <code class="type">uid:int -&gt; euid:int -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> gettid : <code class="type">unit -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ntohl : <code class="type"><a href="../core/Std.Int32.html#TYPEt">Core.Std.Int32.t</a> -&gt; <a href="../core/Std.Int32.html#TYPEt">Core.Std.Int32.t</a></code></span></pre>
      <div class="info">Network to host order long, like C.</div>
    
 
      <pre><span><span class="keyword">val</span> htonl : <code class="type"><a href="../core/Std.Int32.html#TYPEt">Core.Std.Int32.t</a> -&gt; <a href="../core/Std.Int32.html#TYPEt">Core.Std.Int32.t</a></code></span></pre>
      <div class="info">Host to network order long, like C.</div>
    
<pre><code><span id="TYPEstatvfs"><span class="keyword">type</span> statvfs </span>= {</code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.bsize">bsize</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">file system block size</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.frsize">frsize</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">fragment size</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.blocks">blocks</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">size of fs in frsize units</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.bfree">bfree</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left"># free blocks</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.bavail">bavail</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left"># free blocks for non-root</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.files">files</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left"># inodes</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.ffree">ffree</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left"># free inodes</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.favail">favail</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left"># free inodes for non-root</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.fsid">fsid</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">file system ID</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.flag">flag</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">mount flags</td>
	  </tr><tr><td align="left" valign="top"><code>  </code></td><td align="left" valign="top"><code> <span id="TYPEELTstatvfs.namemax">namemax</span> :<code class="type">int</code>;</code></td><td class="typefieldcomment" align="left">maximum filename length</td>
	  </tr></table>}
      
    
 
      <pre><span><span class="keyword">val</span> statvfs : <code class="type">string -&gt; <a href="Extended_unix.html#TYPEstatvfs">statvfs</a></code></span></pre>
      <div class="info">get file system statistics</div>
    
 
      <pre><span><span class="keyword">val</span> getloadavg : <code class="type">unit -&gt; float * float * float</code></span></pre>
      <div class="info">get load averages</div>
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_unix.Extended_passwd.html">Extended_passwd</a> : <code class="code">sig</code> <a href="Extended_unix.Extended_passwd.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_unix.Extended_passwd.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> strptime : <code class="type">fmt:string -&gt; string -&gt; <a href="../core/Std.Unix.html#TYPEtm">Core.Std.Unix.tm</a></code></span></pre>
      
    
<br/>The CIDR module moved into Core.Unix<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_unix.Inet_port.html">Inet_port</a> : <code class="code">sig</code> <a href="Extended_unix.Inet_port.html">..</a> <code class="code">end</code></pre><div class="info">Simple int wrapper to be explicit about ports.</div>
	<div class="content" style="display:none">
	<div file="Extended_unix.Inet_port.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_unix.Mac_address.html">Mac_address</a> : <code class="code">sig</code> <a href="Extended_unix.Mac_address.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_unix.Mac_address.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_unix.Quota.html">Quota</a> : <code class="code">sig</code> <a href="Extended_unix.Quota.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_unix.Quota.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_unix.Mount_entry.html">Mount_entry</a> : <code class="code">sig</code> <a href="Extended_unix.Mount_entry.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_unix.Mount_entry.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> bin_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_statvfs_ : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_statvfs__ : <code class="type">(int -&gt; <a href="Extended_unix.html#TYPEstatvfs">statvfs</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_statvfs_ : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> statvfs_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Extended_unix.html#TYPEstatvfs">statvfs</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_statvfs : <code class="type"><a href="Extended_unix.html#TYPEstatvfs">statvfs</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
<br/>get file system statistics<br/>
	  
<br/>get load averages<br/>
	  
<br/><code class="code">of_passwd_line</code> parse a passwd-like line<br/>
	  
<br/><code class="code">of_passwd_line_exn</code> parse a passwd-like line<br/>
	  
<br/><code class="code">of_passwd_file</code> parse a passwd-like file<br/>
	  
<br/><code class="code">of_passwd_file_exn</code> parse a passwd-like file<br/>
	  
<br/>The CIDR module moved into Core.Unix<br/>
	  
<br/>Simple int wrapper to be explicit about ports.<br/>
	  
