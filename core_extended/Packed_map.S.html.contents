<pre><span id="TYPEt"><span class="keyword">type</span> t </span></pre>
      
    
<pre><span id="TYPEkey"><span class="keyword">type</span> key </span></pre>
      
    
<pre><span id="TYPEvalue"><span class="keyword">type</span> value </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> empty : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_alist : <code class="type">(<a href="Packed_map.S.html#TYPEkey">key</a> * <a href="Packed_map.S.html#TYPEvalue">value</a>) list -&gt; <a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> -&gt; (<a href="Packed_map.S.html#TYPEkey">key</a> * <a href="Packed_map.S.html#TYPEvalue">value</a>) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_aarray : <code class="type">(<a href="Packed_map.S.html#TYPEkey">key</a> * <a href="Packed_map.S.html#TYPEvalue">value</a>) array -&gt; <a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_sorted_aarray : <code class="type">(<a href="Packed_map.S.html#TYPEkey">key</a> * <a href="Packed_map.S.html#TYPEvalue">value</a>) array -&gt; <a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_hashtbl : <code class="type">(<a href="Packed_map.S.html#TYPEkey">key</a>, <a href="Packed_map.S.html#TYPEvalue">value</a>) <a href="../core/Std.Hashtbl.html#TYPEt">Core.Std.Hashtbl.t</a> -&gt; <a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> -&gt; <a href="Packed_map.S.html#TYPEkey">key</a> -&gt; <a href="Packed_map.S.html#TYPEvalue">value</a> option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> -&gt; <a href="Packed_map.S.html#TYPEkey">key</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> -&gt; f:(key:<a href="Packed_map.S.html#TYPEkey">key</a> -&gt; data:<a href="Packed_map.S.html#TYPEvalue">value</a> -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">(int -&gt; <a href="Packed_map.S.html#TYPEt">t</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Packed_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type"><a href="Packed_map.S.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_key_ : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_key__ : <code class="type">(int -&gt; <a href="Packed_map.S.html#TYPEkey">key</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_key_ : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> key_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Packed_map.S.html#TYPEkey">key</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_key : <code class="type"><a href="Packed_map.S.html#TYPEkey">key</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_value_ : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_value__ : <code class="type">(int -&gt; <a href="Packed_map.S.html#TYPEvalue">value</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_value_ : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> value_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Packed_map.S.html#TYPEvalue">value</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_value : <code class="type"><a href="Packed_map.S.html#TYPEvalue">value</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
