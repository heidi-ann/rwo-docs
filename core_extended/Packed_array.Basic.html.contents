<pre><span id="TYPEelt"><span class="keyword">type</span> elt </span></pre>
      
    
<pre><span id="TYPEt"><span class="keyword">type</span> t </span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type"><a href="Packed_array.Basic.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> unsafe_get : <code class="type"><a href="Packed_array.Basic.html#TYPEt">t</a> -&gt; int -&gt; <a href="Packed_array.Basic.html#TYPEelt">elt</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_array : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> array -&gt; <a href="Packed_array.Basic.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> unsafe_slice : <code class="type"><a href="Packed_array.Basic.html#TYPEt">t</a> -&gt; pos:int -&gt; len:int -&gt; <a href="Packed_array.Basic.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_elt_ : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_elt__ : <code class="type">(int -&gt; <a href="Packed_array.Basic.html#TYPEelt">elt</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_elt_ : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> elt_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Packed_array.Basic.html#TYPEelt">elt</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_elt : <code class="type"><a href="Packed_array.Basic.html#TYPEelt">elt</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
