<br/>This module is a wrapper around Command that allows you to
    do away with accumulators. Here's an example:<br/>    Fcommand.cmd ~summary:&quot;Frobnicate something&quot;
      Fcommand.(
        flag &quot;-n&quot; (required int) ~doc:&quot;N number of times to frobnicate&quot;
        ++ anon (args &quot;item&quot; string))
      (fun n items -&gt; ...)<br/>
	  
<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">('main_in, 'main_out) </code>t </span></pre>
      <div class="info"><code class="code">('main_in, 'main_out) t</code> is a type of composable command-line
    specifications.<br/>    Every combinator for building <code class="code">t</code>-values is polymorphic in
    <code class="code">'main_out</code>.  In the final specification expected by <code class="code">cmd</code> used
    to construct a command, <code class="code">'main_out</code> is specialized to <code class="code">unit</code>).
    Various primitive specifications add parameters one at a time,
    so the resulting type of <code class="code">main</code> is<br/>      <code class="code">arg1 -&gt; ... -&gt; argN -&gt; unit</code><br/>    It may help to think of <code class="code">('a, 'b) t</code> as a function space <code class="code">'a -&gt; 'b</code>
    embellished with extra information about how to parse command line,
    including documentation about what various flags are for.</div>
    
<br/>argument parsing<br/>
	  
<pre><span id="TYPEparse"><span class="keyword">type</span> <code class="type">'a </code>parse </span>= <code class="type">string -&gt; 'a</code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> string : <code class="type">string <a href="Deprecated_fcommand.html#TYPEparse">parse</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> int : <code class="type">int <a href="Deprecated_fcommand.html#TYPEparse">parse</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> float : <code class="type">float <a href="Deprecated_fcommand.html#TYPEparse">parse</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> date : <code class="type"><a href="../core/Std.Date.html#TYPEt">Core.Std.Date.t</a> <a href="Deprecated_fcommand.html#TYPEparse">parse</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp : <code class="type"><a href="../core/Std.Sexp.html#TYPEt">Core.Std.Sexp.t</a> <a href="Deprecated_fcommand.html#TYPEparse">parse</a></code></span></pre>
      
    
<br/>flags<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Deprecated_fcommand.Flag.html">Flag</a> : <code class="code">sig</code> <a href="Deprecated_fcommand.Flag.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Deprecated_fcommand.Flag.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> required : <code class="type">'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> optional : <code class="type">'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a option <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> optional_with_default : <code class="type">'a -&gt; 'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> listed : <code class="type">'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a list <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> no_arg : <code class="type">[ `Absent | `Present ] <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> no_arg_bool : <code class="type">bool <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> capture_remaining_command_line : <code class="type">string list option <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> flag : <code class="type">string -&gt; 'a <a href="Deprecated_fcommand.Flag.html#TYPEt">Flag.t</a> -&gt; doc:string -&gt; ('a -&gt; 'm, 'm) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
<br/>anonymous arguments<br/>
	  
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Deprecated_fcommand.Anons.html">Anons</a> : <code class="code">sig</code> <a href="Deprecated_fcommand.Anons.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Deprecated_fcommand.Anons.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> %: : <code class="type">string -&gt; 'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> many : <code class="type">string -&gt; 'a <a href="Deprecated_fcommand.html#TYPEparse">parse</a> -&gt; 'a list <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> maybe : <code class="type">'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'a option <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> maybe_with_default : <code class="type">'a -&gt; 'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> zero : <code class="type">unit <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t2 : <code class="type">'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'b <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; ('a * 'b) <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t3 : <code class="type">'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'b <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'c <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; ('a * 'b * 'c) <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t4 : <code class="type">'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt;
'b <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'c <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; 'd <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; ('a * 'b * 'c * 'd) <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> anon : <code class="type">'a <a href="Deprecated_fcommand.Anons.html#TYPEt">Anons.t</a> -&gt; ('a -&gt; 'm, 'm) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
<br/>various combinators<br/>
	  
 
      <pre><span><span class="keyword">val</span> empty : <code class="type">unit -&gt; ('a, 'a) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> const : <code class="type">'a -&gt; ('a -&gt; 'm, 'm) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> either : <code class="type">string -&gt; ('a option -&gt; 'b, 'a option -&gt; 'a option -&gt; 'b) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ++ : <code class="type">('m1, 'm2) <a href="Deprecated_fcommand.html#TYPEt">t</a> -&gt; ('m2, 'm3) <a href="Deprecated_fcommand.html#TYPEt">t</a> -&gt; ('m1, 'm3) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">spec1 ++ spec2</code> composes command-line specifications <code class="code">spec1</code> and
    <code class="code">spec2</code>.  Parameters specified by <code class="code">spec1</code> will come before those
    specified by <code class="code">spec2</code> in the eventual main function.</div>
    
 
      <pre><span><span class="keyword">val</span> either : <code class="type">string -&gt; ('a option -&gt; 'b, 'a option -&gt; 'a option -&gt; 'b) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> step : <code class="type">('m1 -&gt; 'm2) -&gt; ('m1, 'm2) <a href="Deprecated_fcommand.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">step</code> allows you to transform the way parameters are applied. For
    example, if you want labelled arguments, you can do:<br/>    Fcommand.cmd ~summary:&quot;...&quot;
      Fcommand.(
        step (fun main x y z -&gt; main ~x ~y ~z)
        ++ flag &quot;-x&quot; (optional string) ~doc:&quot;...&quot;
        ++ flag &quot;-y&quot; (required string) ~doc:&quot;...&quot;
        ++ flag &quot;-z&quot; (optional int) ~doc:&quot;...&quot;
      )
      (fun ~x ~y ~z -&gt;
        ...
      )</div>
    
<br/>constructing the command we've specified<br/>
	  
 
      <pre><span><span class="keyword">val</span> cmd : <code class="type">summary:string -&gt;
?readme:(unit -&gt; string) -&gt;
?autocomplete:<a href="Deprecated_command.Autocomplete.html#TYPEt">Deprecated_command.Autocomplete.t</a> -&gt;
?global_flags:unit <a href="Deprecated_command.Flag.html#TYPEt">Deprecated_command.Flag.t</a> list -&gt;
('main, unit) <a href="Deprecated_fcommand.html#TYPEt">t</a> -&gt; 'main -&gt; <a href="Deprecated_command.html#TYPEt">Deprecated_command.t</a></code></span></pre>
      
    
