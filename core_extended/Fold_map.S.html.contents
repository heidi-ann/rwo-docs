<pre><span id="TYPEin_value"><span class="keyword">type</span> in_value </span></pre>
      <div class="info">The type of the values being fold over.</div>
    
<pre><span id="TYPEout_value"><span class="keyword">type</span> out_value </span></pre>
      <div class="info">The type of the accumulator</div>
    
<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">'key </code>t </span>= <code class="type">('key, <a href="Fold_map.S.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a></code> <span class="keyword">private</span></pre>
      
    
<pre><span id="TYPE_in_value"><span class="keyword">type</span> <code class="type">'a </code>_in_value </span>= <code class="type"><a href="Fold_map.S.html#TYPEin_value">in_value</a></code> </pre>
      
    
<pre><span id="TYPE_out_value"><span class="keyword">type</span> <code class="type">'a </code>_out_value </span>= <code class="type"><a href="Fold_map.S.html#TYPEout_value">out_value</a></code> </pre>
      
    
<pre><span id="TYPE_t"><span class="keyword">type</span> <code class="type">('a, 'b) </code>_t </span>= <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> empty : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      <div class="info">A map containing no bindings</div>
    
 
      <pre><span><span class="keyword">val</span> singleton : <code class="type">'a -&gt; <a href="Fold_map.S.html#TYPEin_value">in_value</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_empty : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">key:'a -&gt; data:<a href="Fold_map.S.html#TYPEin_value">in_value</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      <div class="info"><code class="code">add m ~key ~data</code> adds the key to the value already bound to <code class="code">key</code> in <code class="code">m</code>. If no
      value is bound to <code class="code">key</code> than the initial value specified by the functor will be
      used instead.</div>
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a -&gt; <a href="Fold_map.S.html#TYPEout_value">out_value</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> set : <code class="type">key:'a -&gt; data:<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; f:(key:'a -&gt; data:<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; init:'b -&gt; f:(key:'a -&gt; data:<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; 'b -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; f:(key:'a -&gt; data:<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> keys : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; 'a list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> data : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; <a href="Fold_map.S.html#TYPEout_value">out_value</a> list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; ('a * <a href="Fold_map.S.html#TYPEout_value">out_value</a>) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_list : <code class="type">('a * <a href="Fold_map.S.html#TYPEin_value">in_value</a>) list -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; f:(<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; f:(<a href="Fold_map.S.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_map : <code class="type">'a <a href="Fold_map.S.html#TYPEt">t</a> -&gt; ('a, <a href="Fold_map.S.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_map : <code class="type">('a, <a href="Fold_map.S.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a> -&gt; 'a <a href="Fold_map.S.html#TYPEt">t</a></code></span></pre>
      
    
