<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">('k, 'v) </code>t </span></pre>
      <div class="info">A key value cache</div>
    
<pre><span id="TYPEwith_init_args"><span class="keyword">type</span> <code class="type">'a </code>with_init_args </span></pre>
      <div class="info">Used to specify the type of the TODO reference : create and TODO reference : memoize function. This
      describes the arguments required to initialise the caching strategy and
      the store. For instance if the store doesn't take any argument (eg.:
      TODO reference : Store.Table) and the strategy takes an <code class="code">int</code> (eg.: TODO reference : Strategy.Lru)
      this type will be:<br/><pre class="codepre"><code class="code">
   type 'a with_init_args = int -&gt; 'a
</code></pre>
</div>
    
<pre><span id="TYPEmemo"><span class="keyword">type</span> <code class="type">('a, 'b) </code>memo </span>= <code class="type">('a, ('b, exn) <a href="../core/Std.Result.html#TYPEt">Core.Std.Result.t</a>) <a href="Cache.S.html#TYPEt">t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">('k, 'v) <a href="Cache.S.html#TYPEt">t</a> -&gt; 'k -&gt; 'v option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">('k, 'v) <a href="Cache.S.html#TYPEt">t</a> -&gt; key:'k -&gt; data:'v -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">('k, 'a) <a href="Cache.S.html#TYPEt">t</a> -&gt; 'k -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> clear : <code class="type">('a, 'b) <a href="Cache.S.html#TYPEt">t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> create : <code class="type">destruct:('v -&gt; unit) option -&gt; ('k, 'v) <a href="Cache.S.html#TYPEt">t</a> <a href="Cache.S.html#TYPEwith_init_args">with_init_args</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> call_with_cache : <code class="type">cache:('a, 'b) <a href="Cache.S.html#TYPEmemo">memo</a> -&gt; ('a -&gt; 'b) -&gt; 'a -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> memoize : <code class="type">?destruct:('b -&gt; unit) -&gt;
('a -&gt; 'b) -&gt; (('a, 'b) <a href="Cache.S.html#TYPEmemo">memo</a> * ('a -&gt; 'b)) <a href="Cache.S.html#TYPEwith_init_args">with_init_args</a></code></span></pre>
      
    
