<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">+'a </code>t </span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">-</button>
	<pre><span class="keyword">include</span> <code class="code"><a href="../core/Std.Container.S1.html">Core.Std.Container.S1</a></code> with type t = 'a <a href="Lazy_sequence.html#TYPEt">t</a></pre>
	<div class="content">
	<div file="../core/Std.Container.S1.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> iteri : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:(int -&gt; 'a -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> foldi : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; init:'state -&gt; f:(int -&gt; 'state -&gt; 'a -&gt; 'state) -&gt; 'state</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:('a -&gt; 'b) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mapi : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:(int -&gt; 'a -&gt; 'b) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:('a -&gt; bool) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_map : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:('a -&gt; 'b option) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_mapi : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:(int -&gt; 'a -&gt; 'b option) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold_map : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; init:'state -&gt; f:('state -&gt; 'a -&gt; 'state * 'b) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_fold_map : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; init:'state -&gt; f:('state -&gt; 'a -&gt; 'state * 'b option) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> concat : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> concat_seq_list : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> list -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> concat_list_seq : <code class="type">'a list <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> concat_map : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:('a -&gt; 'b list) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> hd : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> last : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> nth : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; int -&gt; 'a option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> tl : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> take : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; int -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> drop : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; int -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> append : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sub : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; pos:int -&gt; len:int -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_map_partial : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; f:('a -&gt; [ `Continue of 'b option | `Stop ]) -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> zip_full : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'b <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; ('a option * 'b option) <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length_if_at_most : <code class="type">max:int -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; int option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length_bounded_by : <code class="type">?min:int -&gt; ?max:int -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_list : <code class="type">'a list -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> init : <code class="type">(int -&gt; 'a option) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> read_lines : <code class="type">string -&gt; string <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> force : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a> -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Lazy_sequence.Iterator.html">Iterator</a> : <code class="code">sig</code> <a href="Lazy_sequence.Iterator.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Lazy_sequence.Iterator.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> empty : <code class="type">'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ==&gt; : <code class="type">'a -&gt; (unit -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a>) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> ==&gt;&gt; : <code class="type">'a list -&gt; (unit -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a>) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> initialize : <code class="type">(unit -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a>) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> protect : <code class="type">finally:(unit -&gt; unit) -&gt; (unit -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a>) -&gt; 'a <a href="Lazy_sequence.html#TYPEt">t</a></code></span></pre>
      
    
