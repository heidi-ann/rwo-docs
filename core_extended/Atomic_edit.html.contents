<pre><code><span id="TYPEreturn_type"><span class="keyword">type</span> return_type </span>= </code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTreturn_type.Ok"><span class="constructor">Ok</span></span></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTreturn_type.Changed"><span class="constructor">Changed</span></span> <span class="keyword">of</span> <code class="type">string * string</code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTreturn_type.Abort"><span class="constructor">Abort</span></span></code></td>
	   </tr></table>
      <div class="info">the return value of <code class="code">atomic_edit</code>
</div>
    
 
      <pre><span><span class="keyword">val</span> atomic_edit : <code class="type">f:(string -&gt; [ `Abort | `Ok ]) -&gt; string -&gt; <a href="Atomic_edit.html#TYPEreturn_type">return_type</a></code></span></pre>
      
    
