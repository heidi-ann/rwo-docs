<pre><span id="TYPEany"><span class="keyword">type</span> <code class="type">('key, 'data, +'z) </code>any </span></pre>
      
    
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_hashtbl.Access_control.Immutable.html">Immutable</a> : <code class="code">sig</code> <a href="Extended_hashtbl.Access_control.Immutable.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_hashtbl.Access_control.Immutable.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_hashtbl.Access_control.Read_only.html">Read_only</a> : <code class="code">sig</code> <a href="Extended_hashtbl.Access_control.Read_only.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_hashtbl.Access_control.Read_only.html.contents" class="content_to_load"> </div>
	</div>
  </div>
<div class="expanding_content">
	<button onclick="expand_content(this)">+</button><pre><span class="keyword">module</span> <a href="Extended_hashtbl.Access_control.Read_write.html">Read_write</a> : <code class="code">sig</code> <a href="Extended_hashtbl.Access_control.Read_write.html">..</a> <code class="code">end</code></pre>
	<div class="content" style="display:none">
	<div file="Extended_hashtbl.Access_control.Read_write.html.contents" class="content_to_load"> </div>
	</div>
  </div>
 
      <pre><span><span class="keyword">val</span> of_hashtbl : <code class="type">('key, 'data) <a href="../core/Std.Hashtbl.html#TYPEt">Core.Std.Hashtbl.t</a> -&gt; ('key, 'data, 'a) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> clear : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> copy : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; ('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; init:'c -&gt; f:(key:'a -&gt; data:'b -&gt; 'c -&gt; 'c) -&gt; 'c</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:(key:'a -&gt; data:'b -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> existsi : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:(key:'a -&gt; data:'b -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:('b -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_empty : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'a -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; 'a -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove_one : <code class="type">('a, 'b list) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; 'a -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> replace : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; key:'a -&gt; data:'b -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> set : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; key:'a -&gt; data:'b -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; key:'a -&gt; data:'b -&gt; [ `Duplicate | `Ok ]</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add_exn : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; key:'a -&gt; data:'b -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> change : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; 'a -&gt; ('b option -&gt; 'b option) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add_multi : <code class="type">('a, 'b list) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; key:'a -&gt; data:'b -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> map : <code class="type">('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:('b -&gt; 'c) -&gt; ('a, 'c, 'e) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mapi : <code class="type">('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:(key:'a -&gt; data:'b -&gt; 'c) -&gt; ('a, 'c, 'e) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_map : <code class="type">('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:('b -&gt; 'c option) -&gt; ('a, 'c, 'e) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_mapi : <code class="type">('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:(key:'a -&gt; data:'b -&gt; 'c option) -&gt; ('a, 'c, 'e) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:('b -&gt; bool) -&gt; ('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filteri : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:(key:'a -&gt; data:'b -&gt; bool) -&gt; ('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_or_add : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'a -&gt; default:(unit -&gt; 'b) -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'a -&gt; 'b option</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find_exn : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'a -&gt; 'b</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter_vals : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; f:('b -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> merge : <code class="type">('k, 'a, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt;
('k, 'b, 'e) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt;
f:(key:'k -&gt; [ `Both of 'a * 'b | `Left of 'a | `Right of 'b ] -&gt; 'c option) -&gt;
('k, 'c, 'f) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> merge_into : <code class="type">f:(key:'a -&gt; 'b -&gt; 'b option -&gt; 'b option) -&gt;
src:('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; dst:('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> keys : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'a list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> data : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; 'b list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter_inplace : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; f:('b -&gt; bool) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filteri_inplace : <code class="type">('a, 'b) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; f:('a -&gt; 'b -&gt; bool) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> equal : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; ('a, 'b, 'd) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; ('b -&gt; 'b -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type">('a, 'b, 'c) <a href="Extended_hashtbl.Access_control.html#TYPEany">any</a> -&gt; ('a * 'b) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> incr : <code class="type">?by:int -&gt; ('a, int) <a href="Extended_hashtbl.Access_control.Read_write.html#TYPEt">Read_write.t</a> -&gt; 'a -&gt; unit</code></span></pre>
      
    
