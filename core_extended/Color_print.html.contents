 
      <pre><span><span class="keyword">val</span> normal : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bold : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> underline : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> inverse : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> red : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> yellow : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> green : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> blue : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> magenta : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> cyan : <code class="type">string -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> gray : <code class="type">string -&gt; brightness:float -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> rgb : <code class="type">string -&gt; r:float -&gt; g:float -&gt; b:float -&gt; string</code></span></pre>
      
    
<pre><span id="TYPEcolor"><span class="keyword">type</span> color </span>= <code class="type">[ `Amber
| `Black
| `Blue
| `Blue_violet
| `Bright_green
| `Chartreuse
| `Cyan
| `Dark_blue
| `Dark_cyan
| `Dark_green
| `Dark_magenta
| `Dark_red
| `Dark_yellow
| `Deep_pink
| `Deep_sky_blue
| `Dodger_blue
| `Gold
| `Gray
| `Green
| `Green_yellow
| `Khaki
| `Light_gray
| `Light_green
| `Light_pink
| `Light_slate_blue
| `Light_steel_blue
| `Magenta
| `Medium_spring_green
| `Orange
| `Orchid
| `Pale_turquoise
| `Pink
| `Plum
| `Purple
| `Red
| `Rose
| `Sea_green
| `Spring_green
| `Turquoise
| `Violet
| `Wheat
| `White
| `Yellow ]</code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> color : <code class="type">string -&gt; color:<a href="Color_print.html#TYPEcolor">color</a> -&gt; string</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> boldprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> underlineprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> inverseprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> redprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> yellowprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> greenprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> blueprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> magentaprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> cyanprintf : <code class="type">('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> grayprintf : <code class="type">brightness:float -&gt; ('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> rgbprintf : <code class="type">r:float -&gt; g:float -&gt; b:float -&gt; ('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> colorprintf : <code class="type">color:<a href="Color_print.html#TYPEcolor">color</a> -&gt; ('a, <a href="../stdlib/Pervasives.html#TYPEout_channel">out_channel</a>, unit) <a href="../stdlib/Pervasives.html#TYPEformat">format</a> -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_color_ : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_color__ : <code class="type">(int -&gt; <a href="Color_print.html#TYPEcolor">color</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_color_ : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> color_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Color_print.html#TYPEcolor">color</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> __color_of_sexp__ : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Color_print.html#TYPEcolor">color</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_color : <code class="type"><a href="Color_print.html#TYPEcolor">color</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
