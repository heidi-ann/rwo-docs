<pre><span id="TYPEout_value"><span class="keyword">type</span> <code class="type">'a </code>out_value </span></pre>
      
    
<pre><span id="TYPEt"><span class="keyword">type</span> <code class="type">('key, 'data) </code>t </span>= <code class="type">('key, 'data <a href="Fold_map.S2.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a></code> <span class="keyword">private</span></pre>
      
    
<pre><span id="TYPE_in_value"><span class="keyword">type</span> <code class="type">'a </code>_in_value </span>= <code class="type">'a</code> </pre>
      
    
<pre><span id="TYPE_out_value"><span class="keyword">type</span> <code class="type">'a </code>_out_value </span>= <code class="type">'a <a href="Fold_map.S2.html#TYPEout_value">out_value</a></code> </pre>
      
    
<pre><span id="TYPE_t"><span class="keyword">type</span> <code class="type">('a, 'b) </code>_t </span>= <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code> </pre>
      
    
 
      <pre><span><span class="keyword">val</span> empty : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> singleton : <code class="type">'a -&gt; 'b -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> is_empty : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> length : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; int</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> add : <code class="type">key:'a -&gt; data:'b -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> find : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; 'a -&gt; 'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> remove : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; 'a -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> set : <code class="type">key:'a -&gt; data:'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> mem : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; 'a -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> iter : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; f:(key:'a -&gt; data:'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; unit) -&gt; unit</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; init:'c -&gt; f:(key:'a -&gt; data:'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; 'c -&gt; 'c) -&gt; 'c</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> filter : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; f:(key:'a -&gt; data:'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> keys : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; 'a list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> data : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; 'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_alist : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; ('a * 'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a>) list</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_list : <code class="type">('a * 'b) list -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> for_all : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; f:('b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> exists : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; f:('b <a href="Fold_map.S2.html#TYPEout_value">out_value</a> -&gt; bool) -&gt; bool</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> to_map : <code class="type">('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a> -&gt; ('a, 'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> of_map : <code class="type">('a, 'b <a href="Fold_map.S2.html#TYPEout_value">out_value</a>) <a href="../core/Std.Map.Poly.html#TYPEt">Core.Std.Map.Poly.t</a> -&gt; ('a, 'b) <a href="Fold_map.S2.html#TYPEt">t</a></code></span></pre>
      
    
