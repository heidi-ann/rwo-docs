<pre><span id="TYPEtype_desc"><span class="keyword">type</span> type_desc </span>= <code class="type">string</code> </pre>
      
    
<pre><span id="TYPEname"><span class="keyword">type</span> name </span>= <code class="type">string</code> </pre>
      
    
<pre><code><span id="TYPEt"><span class="keyword">type</span> t </span>= </code></pre><table class="typetable">
		    <tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.New_field"><span class="constructor">New_field</span></span> <span class="keyword">of</span> <code class="type">int * string * <a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> * <a href="Stats_reporting.Stored_data.html#TYPEname">name</a></code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Int_datum"><span class="constructor">Int_datum</span></span> <span class="keyword">of</span> <code class="type">int * int * <a href="Time_stamp_counter.Cycles.html#TYPEt">Time_stamp_counter.Cycles.t</a></code></code></td>
	   </tr><tr><td align="left" valign="top"><code><span class="keyword">|</span></code></td><td align="left" valign="top"><code><span id="TYPEELTt.Float_datum"><span class="constructor">Float_datum</span></span> <span class="keyword">of</span> <code class="type">int * float * <a href="Time_stamp_counter.Cycles.html#TYPEt">Time_stamp_counter.Cycles.t</a></code></code></td>
	   </tr></table>
      
    
 
      <pre><span><span class="keyword">val</span> read_msg_and_snapshot : <code class="type">file:string -&gt; string * <a href="Time_stamp_counter.Cycles.html#TYPEsnapshot">Time_stamp_counter.Cycles.snapshot</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> fold : <code class="type">file:string -&gt; init:'a -&gt; f:('a -&gt; <a href="Stats_reporting.Stored_data.html#TYPEt">t</a> -&gt; 'a) -&gt; 'a</code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_type_desc_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_type_desc__ : <code class="type">(int -&gt; <a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_type_desc_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> type_desc_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_type_desc : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEtype_desc">type_desc</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_name_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_name__ : <code class="type">(int -&gt; <a href="Stats_reporting.Stored_data.html#TYPEname">name</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_name_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> name_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Stats_reporting.Stored_data.html#TYPEname">name</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_name : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEname">name</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEt">Core.Std.Bin_prot.Type_class.t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Read_ml.html#TYPEreader">Core.Std.Bin_prot.Read_ml.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_read_t__ : <code class="type">(int -&gt; <a href="Stats_reporting.Stored_data.html#TYPEt">t</a>) <a href="../core/Std.Bin_prot.Unsafe_read_c.html#TYPEreader">Core.Std.Bin_prot.Unsafe_read_c.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_reader_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEreader">Core.Std.Bin_prot.Type_class.reader</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_size_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Size.html#TYPEsizer">Core.Std.Bin_prot.Size.sizer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Write_ml.html#TYPEwriter">Core.Std.Bin_prot.Write_ml.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_write_t_ : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Unsafe_write_c.html#TYPEwriter">Core.Std.Bin_prot.Unsafe_write_c.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> bin_writer_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> <a href="../core/Std.Bin_prot.Type_class.html#TYPEwriter">Core.Std.Bin_prot.Type_class.writer</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> t_of_sexp : <code class="type"><a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a> -&gt; <a href="Stats_reporting.Stored_data.html#TYPEt">t</a></code></span></pre>
      
    
 
      <pre><span><span class="keyword">val</span> sexp_of_t : <code class="type"><a href="Stats_reporting.Stored_data.html#TYPEt">t</a> -&gt; <a href="../sexplib/Sexp.html#TYPEt">Sexplib.Sexp.t</a></code></span></pre>
      
    
